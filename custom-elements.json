{
  "version": "experimental",
  "tags": [
    {
      "name": "d2l-alert-toast",
      "path": "./components/alert/alert-toast.js",
      "description": "A component for communicating important information relating to the state of the system and the user's work flow, displayed as a pop-up at the bottom of the screen that automatically dismisses itself by default.",
      "attributes": [
        {
          "name": "button-text",
          "description": "Text that is displayed within the alert's action button. If no text is provided the button is not displayed.",
          "type": "string"
        },
        {
          "name": "subtext",
          "description": "The text that is displayed below the main alert message",
          "type": "string"
        },
        {
          "name": "type",
          "description": "Type of the alert being displayed",
          "type": "'default'|'critical'|'success'|'warning'",
          "default": "\"\\\"default\\\"\""
        },
        {
          "name": "hide-close-button",
          "description": "Hide the close button to prevent users from manually closing the alert",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-close",
          "description": "Prevents the alert from automatically closing 4 seconds after opening",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "description": "Open or close the toast alert",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "buttonText",
          "attribute": "button-text",
          "description": "Text that is displayed within the alert's action button. If no text is provided the button is not displayed.",
          "type": "string"
        },
        {
          "name": "subtext",
          "attribute": "subtext",
          "description": "The text that is displayed below the main alert message",
          "type": "string"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Type of the alert being displayed",
          "type": "'default'|'critical'|'success'|'warning'",
          "default": "\"\\\"default\\\"\""
        },
        {
          "name": "hideCloseButton",
          "attribute": "hide-close-button",
          "description": "Hide the close button to prevent users from manually closing the alert",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAutoClose",
          "attribute": "no-auto-close",
          "description": "Prevents the alert from automatically closing 4 seconds after opening",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "open",
          "attribute": "open",
          "description": "Open or close the toast alert",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-alert-toast-close",
          "description": "Dispatched when the toast is closed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the component"
        }
      ]
    },
    {
      "name": "d2l-alert",
      "path": "./components/alert/alert.js",
      "description": "A component for communicating important information relating to the state of the system and the user's work flow.",
      "attributes": [
        {
          "name": "button-text",
          "description": "Text that is displayed within the alert's action button. If no text is provided the button is not displayed.",
          "type": "string"
        },
        {
          "name": "subtext",
          "description": "The text that is displayed below the main alert message",
          "type": "string"
        },
        {
          "name": "has-close-button",
          "description": "Gives the alert a close button that will close the alert when clicked",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding",
          "description": "Opt out of default padding/whitespace around the alert",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "description": "Type of the alert being displayed",
          "type": "'default'|'critical'|'success'|'warning'",
          "default": "\"default\""
        }
      ],
      "properties": [
        {
          "name": "buttonText",
          "attribute": "button-text",
          "description": "Text that is displayed within the alert's action button. If no text is provided the button is not displayed.",
          "type": "string"
        },
        {
          "name": "subtext",
          "attribute": "subtext",
          "description": "The text that is displayed below the main alert message",
          "type": "string"
        },
        {
          "name": "hasCloseButton",
          "attribute": "has-close-button",
          "description": "Gives the alert a close button that will close the alert when clicked",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPadding",
          "attribute": "no-padding",
          "description": "Opt out of default padding/whitespace around the alert",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Type of the alert being displayed",
          "type": "'default'|'critical'|'success'|'warning'",
          "default": "\"default\""
        }
      ],
      "events": [
        {
          "name": "d2l-alert-close",
          "description": "Dispatched when the alert's close button is clicked"
        },
        {
          "name": "d2l-alert-button-press",
          "description": "Dispatched when the alert's action button is clicked"
        },
        {
          "name": "d2l-alert-closed"
        },
        {
          "name": "d2l-alert-button-pressed"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the component"
        }
      ]
    },
    {
      "name": "d2l-backdrop",
      "path": "./components/backdrop/backdrop.js",
      "description": "A component for displaying a semi-transparent backdrop behind a specified sibling element. It also hides elements other than the target from assistive technologies by applying 'role=\"presentation\"' and 'aria-hidden=\"true\"'.",
      "attributes": [
        {
          "name": "for-target",
          "description": "REQUIRED: id of the target element to display backdrop behind",
          "type": "string"
        },
        {
          "name": "shown",
          "description": "Used to control whether the backdrop is shown",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-animate-hide",
          "description": "Disables the fade-out transition while the backdrop is being hidden",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "forTarget",
          "attribute": "for-target",
          "description": "REQUIRED: id of the target element to display backdrop behind",
          "type": "string"
        },
        {
          "name": "shown",
          "attribute": "shown",
          "description": "Used to control whether the backdrop is shown",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAnimateHide",
          "attribute": "no-animate-hide",
          "description": "Disables the fade-out transition while the backdrop is being hidden",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-breadcrumb-current-page",
      "path": "./components/breadcrumbs/breadcrumb-current-page.js",
      "description": "An entry within a <d2l-breadcrumbs> parent representing the current page.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: The title of the current page",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: The title of the current page",
          "type": "string"
        }
      ]
    },
    {
      "name": "d2l-breadcrumb",
      "path": "./components/breadcrumbs/breadcrumb.js",
      "description": "An entry within a <d2l-breadcrumbs> parent.",
      "attributes": [
        {
          "name": "href",
          "description": "The Url that breadcrumb is pointing to",
          "type": "string"
        },
        {
          "name": "target",
          "description": "The target of breadcrumb link",
          "type": "string"
        },
        {
          "name": "aria-label",
          "description": "ARIA label of the breadcrumb",
          "type": "string"
        },
        {
          "name": "text",
          "description": "REQUIRED: text of the breadcrumb link",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "description": "The Url that breadcrumb is pointing to",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "The target of breadcrumb link",
          "type": "string"
        },
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "description": "ARIA label of the breadcrumb",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: text of the breadcrumb link",
          "type": "string",
          "default": "\"\""
        }
      ]
    },
    {
      "name": "d2l-breadcrumbs",
      "path": "./components/breadcrumbs/breadcrumbs.js",
      "description": "Help users understand where they are within the application, and provide useful clues about how the space is organized. They also provide a convenient navigation mechanism.",
      "attributes": [
        {
          "name": "compact",
          "description": "Renders in compact mode, displaying only the last item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "compact",
          "attribute": "compact",
          "description": "Renders in compact mode, displaying only the last item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "breadcrumb items"
        }
      ]
    },
    {
      "name": "d2l-button-icon",
      "path": "./components/button/button-icon.js",
      "description": "A button component that can be used just like the native button for instances where only an icon is displayed.",
      "attributes": [
        {
          "name": "h-align",
          "description": "Aligns the leading edge of text if value is set to \"text\"",
          "type": "'text'|''"
        },
        {
          "name": "icon",
          "description": "REQUIRED: Preset icon key (e.g. \"tier1:gear\")",
          "type": "string"
        },
        {
          "name": "text",
          "description": "REQUIRED: Accessible text for the button",
          "type": "string"
        },
        {
          "name": "translucent",
          "description": "Indicates to display translucent (e.g., on rich backgrounds)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "theme",
          "type": "string"
        },
        {
          "name": "aria-expanded",
          "description": "Indicate expansion state of a collapsible element",
          "type": "string"
        },
        {
          "name": "aria-haspopup",
          "description": "Indicate clicking the button opens a menu",
          "type": "string"
        },
        {
          "name": "aria-label",
          "description": "Acts as a primary label",
          "type": "string"
        },
        {
          "name": "form",
          "type": "string"
        },
        {
          "name": "formaction",
          "type": "string"
        },
        {
          "name": "formenctype",
          "type": "string"
        },
        {
          "name": "formmethod",
          "type": "string"
        },
        {
          "name": "formnovalidate",
          "type": "string"
        },
        {
          "name": "formtarget",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "primary",
          "description": "Styles the button as a primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "type": "string",
          "default": "\"button\""
        }
      ],
      "properties": [
        {
          "name": "hAlign",
          "attribute": "h-align",
          "description": "Aligns the leading edge of text if value is set to \"text\"",
          "type": "'text'|''"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "description": "REQUIRED: Preset icon key (e.g. \"tier1:gear\")",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Accessible text for the button",
          "type": "string"
        },
        {
          "name": "translucent",
          "attribute": "translucent",
          "description": "Indicates to display translucent (e.g., on rich backgrounds)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "theme",
          "attribute": "theme",
          "type": "string"
        },
        {
          "name": "ariaExpanded",
          "attribute": "aria-expanded",
          "description": "Indicate expansion state of a collapsible element",
          "type": "string"
        },
        {
          "name": "ariaHaspopup",
          "attribute": "aria-haspopup",
          "description": "Indicate clicking the button opens a menu",
          "type": "string"
        },
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "description": "Acts as a primary label",
          "type": "string"
        },
        {
          "name": "form",
          "attribute": "form",
          "type": "string"
        },
        {
          "name": "formaction",
          "attribute": "formaction",
          "type": "string"
        },
        {
          "name": "formenctype",
          "attribute": "formenctype",
          "type": "string"
        },
        {
          "name": "formmethod",
          "attribute": "formmethod",
          "type": "string"
        },
        {
          "name": "formnovalidate",
          "attribute": "formnovalidate",
          "type": "string"
        },
        {
          "name": "formtarget",
          "attribute": "formtarget",
          "type": "string"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "primary",
          "attribute": "primary",
          "description": "Styles the button as a primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "attribute": "type",
          "type": "string",
          "default": "\"button\""
        },
        {
          "name": "visibleOnAncestor",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-button-subtle",
      "path": "./components/button/button-subtle.js",
      "description": "A button component that can be used just like the native button, but for advanced or de-emphasized actions.",
      "attributes": [
        {
          "name": "description",
          "description": "A description to be added to the button for accessibility when text on button does not provide enough context",
          "type": "string"
        },
        {
          "name": "h-align",
          "description": "Aligns the leading edge of text if value is set to \"text\"",
          "type": "'text'|''"
        },
        {
          "name": "icon",
          "description": "Preset icon key (e.g. \"tier1:gear\")",
          "type": "string"
        },
        {
          "name": "text",
          "description": "REQUIRED: Text for the button",
          "type": "string"
        },
        {
          "name": "icon-right",
          "description": "Indicates that the icon should be rendered on right",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "aria-expanded",
          "description": "Indicate expansion state of a collapsible element",
          "type": "string"
        },
        {
          "name": "aria-haspopup",
          "description": "Indicate clicking the button opens a menu",
          "type": "string"
        },
        {
          "name": "aria-label",
          "description": "Acts as a primary label",
          "type": "string"
        },
        {
          "name": "form",
          "type": "string"
        },
        {
          "name": "formaction",
          "type": "string"
        },
        {
          "name": "formenctype",
          "type": "string"
        },
        {
          "name": "formmethod",
          "type": "string"
        },
        {
          "name": "formnovalidate",
          "type": "string"
        },
        {
          "name": "formtarget",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "primary",
          "description": "Styles the button as a primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "type": "string",
          "default": "\"button\""
        }
      ],
      "properties": [
        {
          "name": "description",
          "attribute": "description",
          "description": "A description to be added to the button for accessibility when text on button does not provide enough context",
          "type": "string"
        },
        {
          "name": "hAlign",
          "attribute": "h-align",
          "description": "Aligns the leading edge of text if value is set to \"text\"",
          "type": "'text'|''"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "description": "Preset icon key (e.g. \"tier1:gear\")",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text for the button",
          "type": "string"
        },
        {
          "name": "iconRight",
          "attribute": "icon-right",
          "description": "Indicates that the icon should be rendered on right",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "ariaExpanded",
          "attribute": "aria-expanded",
          "description": "Indicate expansion state of a collapsible element",
          "type": "string"
        },
        {
          "name": "ariaHaspopup",
          "attribute": "aria-haspopup",
          "description": "Indicate clicking the button opens a menu",
          "type": "string"
        },
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "description": "Acts as a primary label",
          "type": "string"
        },
        {
          "name": "form",
          "attribute": "form",
          "type": "string"
        },
        {
          "name": "formaction",
          "attribute": "formaction",
          "type": "string"
        },
        {
          "name": "formenctype",
          "attribute": "formenctype",
          "type": "string"
        },
        {
          "name": "formmethod",
          "attribute": "formmethod",
          "type": "string"
        },
        {
          "name": "formnovalidate",
          "attribute": "formnovalidate",
          "type": "string"
        },
        {
          "name": "formtarget",
          "attribute": "formtarget",
          "type": "string"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "primary",
          "attribute": "primary",
          "description": "Styles the button as a primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "attribute": "type",
          "type": "string",
          "default": "\"button\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the button"
        }
      ]
    },
    {
      "name": "d2l-button",
      "path": "./components/button/button.js",
      "description": "A button component that can be used just like the native button element.",
      "attributes": [
        {
          "name": "description",
          "description": "A description to be added to the button for accessibility when text on button does not provide enough context",
          "type": "string"
        },
        {
          "name": "aria-expanded",
          "description": "Indicate expansion state of a collapsible element",
          "type": "string"
        },
        {
          "name": "aria-haspopup",
          "description": "Indicate clicking the button opens a menu",
          "type": "string"
        },
        {
          "name": "aria-label",
          "description": "Acts as a primary label",
          "type": "string"
        },
        {
          "name": "form",
          "type": "string"
        },
        {
          "name": "formaction",
          "type": "string"
        },
        {
          "name": "formenctype",
          "type": "string"
        },
        {
          "name": "formmethod",
          "type": "string"
        },
        {
          "name": "formnovalidate",
          "type": "string"
        },
        {
          "name": "formtarget",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "primary",
          "description": "Styles the button as a primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "type": "string",
          "default": "\"button\""
        }
      ],
      "properties": [
        {
          "name": "description",
          "attribute": "description",
          "description": "A description to be added to the button for accessibility when text on button does not provide enough context",
          "type": "string"
        },
        {
          "name": "ariaExpanded",
          "attribute": "aria-expanded",
          "description": "Indicate expansion state of a collapsible element",
          "type": "string"
        },
        {
          "name": "ariaHaspopup",
          "attribute": "aria-haspopup",
          "description": "Indicate clicking the button opens a menu",
          "type": "string"
        },
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "description": "Acts as a primary label",
          "type": "string"
        },
        {
          "name": "form",
          "attribute": "form",
          "type": "string"
        },
        {
          "name": "formaction",
          "attribute": "formaction",
          "type": "string"
        },
        {
          "name": "formenctype",
          "attribute": "formenctype",
          "type": "string"
        },
        {
          "name": "formmethod",
          "attribute": "formmethod",
          "type": "string"
        },
        {
          "name": "formnovalidate",
          "attribute": "formnovalidate",
          "type": "string"
        },
        {
          "name": "formtarget",
          "attribute": "formtarget",
          "type": "string"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "primary",
          "attribute": "primary",
          "description": "Styles the button as a primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "attribute": "type",
          "type": "string",
          "default": "\"button\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the button"
        }
      ]
    },
    {
      "name": "d2l-floating-buttons",
      "path": "./components/button/floating-buttons.js",
      "description": "A wrapper component to display floating workflow buttons. When the normal position of the workflow buttons is below the bottom edge of the viewport, they will dock at the bottom edge. When the normal position becomes visible, they will undock.",
      "attributes": [
        {
          "name": "always-float",
          "description": "Indicates to display buttons as always floating",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "min-height",
          "description": "The minimum height of the viewport to display floating buttons at (where applicable)",
          "type": "string",
          "default": "\"500px\""
        }
      ],
      "properties": [
        {
          "name": "alwaysFloat",
          "attribute": "always-float",
          "description": "Indicates to display buttons as always floating",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "minHeight",
          "attribute": "min-height",
          "description": "The minimum height of the viewport to display floating buttons at (where applicable)",
          "type": "string",
          "default": "\"500px\""
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Content to be displayed in the floating container"
        }
      ]
    },
    {
      "name": "d2l-calendar",
      "path": "./components/calendar/calendar.js",
      "description": "A component can be used to display a responsively sized calendar that allows for date selection.",
      "attributes": [
        {
          "name": "label",
          "description": "Unique label text for calendar (necessary if multiple calendars on page)",
          "type": "string"
        },
        {
          "name": "max-value",
          "description": "Maximum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "min-value",
          "description": "Minimum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "selected-value",
          "description": "Currently selected date",
          "type": "string"
        },
        {
          "name": "summary",
          "description": "Summary of the calendar for accessibility",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "Unique label text for calendar (necessary if multiple calendars on page)",
          "type": "string"
        },
        {
          "name": "maxValue",
          "attribute": "max-value",
          "description": "Maximum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "minValue",
          "attribute": "min-value",
          "description": "Minimum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "selectedValue",
          "attribute": "selected-value",
          "description": "Currently selected date",
          "type": "string"
        },
        {
          "name": "summary",
          "attribute": "summary",
          "description": "Summary of the calendar for accessibility",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "d2l-calendar-selected",
          "description": "Dispatched when a date is selected through click, space, or enter. \"e.detail.date\" is in ISO 8601 calendar date format (\"YYYY-MM-DD\")."
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Content displayed under the calendar (e.g., buttons)"
        }
      ]
    },
    {
      "name": "d2l-card-content-meta",
      "path": "./components/card/card-content-meta.js",
      "description": "A helper for providing layout/style for meta data within the `content` slot.",
      "slots": [
        {
          "name": "",
          "description": "Slot for meta data text"
        }
      ]
    },
    {
      "name": "d2l-card-content-title",
      "path": "./components/card/card-content-title.js",
      "description": "A helper for providing layout/style for a title within the `content` slot.",
      "slots": [
        {
          "name": "",
          "description": "Slot for title text"
        }
      ]
    },
    {
      "name": "d2l-card-footer-link",
      "path": "./components/card/card-footer-link.js",
      "description": "An icon link that can be placed in the `footer` slot.",
      "attributes": [
        {
          "name": "href",
          "description": "URL or URL fragment of the link",
          "type": "string"
        },
        {
          "name": "hreflang",
          "description": "Indicates the human language of the linked resource; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "icon",
          "description": "REQUIRED: Preset icon key (e.g. \"tier1:gear\")",
          "type": "string"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship of the target object to the link object",
          "type": "string"
        },
        {
          "name": "secondary-text",
          "description": "Secondary text to display as a superscript on the icon",
          "type": "string"
        },
        {
          "name": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "text",
          "description": "REQUIRED: Accessible text for the link (not visible, gets announced when user focuses)",
          "type": "string"
        },
        {
          "name": "type",
          "description": "Specifies the media type in the form of a MIME type for the linked URL; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "download",
          "description": "Download a URL instead of navigating to it",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "secondary-text-type",
          "description": "Controls the style of the secondary text bubble; options are 'notification' and 'count'",
          "type": "string",
          "default": "\"notification\""
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "description": "URL or URL fragment of the link",
          "type": "string"
        },
        {
          "name": "hreflang",
          "attribute": "hreflang",
          "description": "Indicates the human language of the linked resource; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "description": "REQUIRED: Preset icon key (e.g. \"tier1:gear\")",
          "type": "string"
        },
        {
          "name": "rel",
          "attribute": "rel",
          "description": "Specifies the relationship of the target object to the link object",
          "type": "string"
        },
        {
          "name": "secondaryText",
          "attribute": "secondary-text",
          "description": "Secondary text to display as a superscript on the icon",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Accessible text for the link (not visible, gets announced when user focuses)",
          "type": "string"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Specifies the media type in the form of a MIME type for the linked URL; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "download",
          "attribute": "download",
          "description": "Download a URL instead of navigating to it",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "secondaryTextType",
          "attribute": "secondary-text-type",
          "description": "Controls the style of the secondary text bubble; options are 'notification' and 'count'",
          "type": "string",
          "default": "\"notification\""
        }
      ]
    },
    {
      "name": "d2l-card-loading-shimmer",
      "path": "./components/card/card-loading-shimmer.js",
      "description": "A card layout component for when the card header is loading.",
      "attributes": [
        {
          "name": "loading",
          "description": "Whether the header content is being loaded",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "loading",
          "attribute": "loading",
          "description": "Whether the header content is being loaded",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Slot for header content being loaded"
        }
      ]
    },
    {
      "name": "d2l-card",
      "path": "./components/card/card.js",
      "description": "A container element that provides specific layout using several slots.",
      "attributes": [
        {
          "name": "href",
          "description": "Location for the primary action/navigation",
          "type": "string"
        },
        {
          "name": "hreflang",
          "description": "Indicates the human language of the linked resource; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship of the target object to the link object",
          "type": "string"
        },
        {
          "name": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "text",
          "description": "Accessible text for the card (will be announced when AT user focuses)",
          "type": "string"
        },
        {
          "name": "type",
          "description": "Specifies the media type in the form of a MIME type for the linked URL; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "align-center",
          "description": "Style the card's content and footer as centered horizontally",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "download",
          "description": "Download a URL instead of navigating to it",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subtle",
          "description": "Subtle aesthetic on non-white backgrounds",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "description": "Location for the primary action/navigation",
          "type": "string"
        },
        {
          "name": "hreflang",
          "attribute": "hreflang",
          "description": "Indicates the human language of the linked resource; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "rel",
          "attribute": "rel",
          "description": "Specifies the relationship of the target object to the link object",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "Accessible text for the card (will be announced when AT user focuses)",
          "type": "string"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Specifies the media type in the form of a MIME type for the linked URL; purely advisory, with no built-in functionality",
          "type": "string"
        },
        {
          "name": "alignCenter",
          "attribute": "align-center",
          "description": "Style the card's content and footer as centered horizontally",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "download",
          "attribute": "download",
          "description": "Download a URL instead of navigating to it",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subtle",
          "attribute": "subtle",
          "description": "Subtle aesthetic on non-white backgrounds",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "content",
          "description": "Slot for primary content such as title and supplementary info (no actionable elements)"
        },
        {
          "name": "actions",
          "description": "Slot for buttons and dropdown openers to be placed in top right corner of header"
        },
        {
          "name": "badge",
          "description": "Slot for badge content, such as a profile image or status indicator"
        },
        {
          "name": "footer",
          "description": "Slot for footer content, such secondary actions"
        },
        {
          "name": "header",
          "description": "Slot for header content, such as course image (no actionable elements)"
        }
      ]
    },
    {
      "name": "d2l-color-swatch",
      "path": "./components/colors/demo/color-swatch.js",
      "attributes": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "name",
          "attribute": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "d2l-code-view",
      "path": "./components/demo/code-view.js",
      "attributes": [
        {
          "name": "hide-language",
          "type": "boolean"
        },
        {
          "name": "language",
          "type": "string",
          "default": "\"html\""
        }
      ],
      "properties": [
        {
          "name": "hideLanguage",
          "attribute": "hide-language",
          "type": "boolean"
        },
        {
          "name": "language",
          "attribute": "language",
          "type": "string",
          "default": "\"html\""
        }
      ]
    },
    {
      "name": "d2l-demo-page",
      "path": "./components/demo/demo-page.js",
      "attributes": [
        {
          "name": "page-title",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "pageTitle",
          "attribute": "page-title",
          "type": "string"
        }
      ]
    },
    {
      "name": "d2l-demo-snippet",
      "path": "./components/demo/demo-snippet.js",
      "attributes": [
        {
          "name": "code-view-hidden",
          "type": "boolean"
        },
        {
          "name": "no-padding",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "codeViewHidden",
          "attribute": "code-view-hidden",
          "type": "boolean"
        },
        {
          "name": "noPadding",
          "attribute": "no-padding",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "d2l-dir-update"
        }
      ]
    },
    {
      "name": "d2l-dialog-demo-async-content",
      "path": "./components/dialog/demo/dialog-async-content.js",
      "attributes": [
        {
          "name": "href",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "type": "string"
        }
      ]
    },
    {
      "name": "d2l-dialog-demo-container",
      "path": "./components/dialog/demo/dialog-container.js",
      "attributes": [
        {
          "name": "opened",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "opened",
          "attribute": "opened",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-dialog-confirm",
      "path": "./components/dialog/dialog-confirm.js",
      "description": "A simple confirmation dialog for prompting the user. Apply the \"data-dialog-action\" attribute to workflow buttons to automatically close the confirm dialog with the action value.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: The text content for the confirmation dialog",
          "type": "string"
        },
        {
          "name": "title-text",
          "description": "The optional title for the dialog",
          "type": "string"
        },
        {
          "name": "opened",
          "description": "Whether or not the dialog is open",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: The text content for the confirmation dialog",
          "type": "string"
        },
        {
          "name": "titleText",
          "attribute": "title-text",
          "description": "The optional title for the dialog",
          "type": "string"
        },
        {
          "name": "opened",
          "attribute": "opened",
          "description": "Whether or not the dialog is open",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-dialog-open",
          "description": "Dispatched when the dialog is opened"
        },
        {
          "name": "d2l-dialog-close",
          "description": "Dispatched with the action value when the dialog is closed for any reason"
        }
      ],
      "slots": [
        {
          "name": "footer",
          "description": "Slot for footer content such as workflow buttons"
        }
      ]
    },
    {
      "name": "d2l-dialog-fullscreen",
      "path": "./components/dialog/dialog-fullscreen.js",
      "description": "A generic fullscreen dialog that provides a slot for arbitrary content and a \"footer\" slot for workflow buttons. Apply the \"data-dialog-action\" attribute to workflow buttons to automatically close the dialog with the action value.",
      "attributes": [
        {
          "name": "async",
          "description": "Whether to render a loading-spinner and wait for state changes via AsyncContainerMixin",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "title-text",
          "description": "The optional title for the dialog",
          "type": "string"
        },
        {
          "name": "opened",
          "description": "Whether or not the dialog is open",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "async",
          "attribute": "async",
          "description": "Whether to render a loading-spinner and wait for state changes via AsyncContainerMixin",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "asyncContainerCustom",
          "type": "boolean"
        },
        {
          "name": "asyncPendingDelay",
          "type": "number",
          "default": "0"
        },
        {
          "name": "titleText",
          "attribute": "title-text",
          "description": "The optional title for the dialog",
          "type": "string"
        },
        {
          "name": "opened",
          "attribute": "opened",
          "description": "Whether or not the dialog is open",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-dialog-open",
          "description": "Dispatched when the dialog is opened"
        },
        {
          "name": "d2l-dialog-close",
          "description": "Dispatched with the action value when the dialog is closed for any reason"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default slot for content inside dialog"
        },
        {
          "name": "footer",
          "description": "Slot for footer content such as workflow buttons"
        }
      ]
    },
    {
      "name": "d2l-dialog",
      "path": "./components/dialog/dialog.js",
      "description": "A generic dialog that provides a slot for arbitrary content and a \"footer\" slot for workflow buttons. Apply the \"data-dialog-action\" attribute to workflow buttons to automatically close the dialog with the action value.",
      "attributes": [
        {
          "name": "async",
          "description": "Whether to render a loading-spinner and wait for state changes via AsyncContainerMixin",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "width",
          "description": "The preferred width (unit-less) for the dialog",
          "type": "number",
          "default": "600"
        },
        {
          "name": "title-text",
          "description": "The optional title for the dialog",
          "type": "string"
        },
        {
          "name": "opened",
          "description": "Whether or not the dialog is open",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "async",
          "attribute": "async",
          "description": "Whether to render a loading-spinner and wait for state changes via AsyncContainerMixin",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "width",
          "attribute": "width",
          "description": "The preferred width (unit-less) for the dialog",
          "type": "number",
          "default": "600"
        },
        {
          "name": "asyncContainerCustom",
          "type": "boolean"
        },
        {
          "name": "asyncPendingDelay",
          "type": "number",
          "default": "0"
        },
        {
          "name": "titleText",
          "attribute": "title-text",
          "description": "The optional title for the dialog",
          "type": "string"
        },
        {
          "name": "opened",
          "attribute": "opened",
          "description": "Whether or not the dialog is open",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-dialog-open",
          "description": "Dispatched when the dialog is opened"
        },
        {
          "name": "d2l-dialog-close",
          "description": "Dispatched with the action value when the dialog is closed for any reason"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default slot for content inside dialog"
        },
        {
          "name": "footer",
          "description": "Slot for footer content such as workflow buttons"
        }
      ]
    },
    {
      "name": "d2l-dropdown-button-subtle",
      "path": "./components/dropdown/dropdown-button-subtle.js",
      "description": "A \"d2l-button-subtle\" opener for dropdown content.",
      "attributes": [
        {
          "name": "description",
          "description": "A description to be added to the opener button for accessibility when text on button does not provide enough context",
          "type": "string"
        },
        {
          "name": "text",
          "description": "REQUIRED: Text for the button",
          "type": "string"
        },
        {
          "name": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "description",
          "attribute": "description",
          "description": "A description to be added to the opener button for accessibility when text on button does not provide enough context",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text for the button",
          "type": "string"
        },
        {
          "name": "dropdownOpener",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "noAutoOpen",
          "attribute": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Dropdown content (e.g., \"d2l-dropdown-content\", \"d2l-dropdown-menu\" or \"d2l-dropdown-tabs\")"
        }
      ]
    },
    {
      "name": "d2l-dropdown-button",
      "path": "./components/dropdown/dropdown-button.js",
      "description": "A \"d2l-button\" opener for dropdown content.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: Text for the button",
          "type": "string"
        },
        {
          "name": "primary",
          "description": "Optionally render button as primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text for the button",
          "type": "string"
        },
        {
          "name": "primary",
          "attribute": "primary",
          "description": "Optionally render button as primary button",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dropdownOpener",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "noAutoOpen",
          "attribute": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Dropdown content (e.g., \"d2l-dropdown-content\", \"d2l-dropdown-menu\" or \"d2l-dropdown-tabs\")"
        }
      ]
    },
    {
      "name": "d2l-dropdown-content",
      "path": "./components/dropdown/dropdown-content.js",
      "description": "A generic container for dropdown content.  It provides behavior such as sizing,  positioning, and managing focus gain/loss.",
      "attributes": [
        {
          "name": "align",
          "description": "Optionally align dropdown to either start or end. If not set, the dropdown will attempt be centred.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "description": "Optionally provide boundaries to where the dropdown will appear. Valid properties are \"above\", \"below\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "max-width",
          "description": "Override default max-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "min-width",
          "description": "Override default min-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "max-height",
          "description": "Override max-height. Note that the default behaviour is to be as tall as necessary within the viewport, so this property is usually not needed.",
          "type": "number"
        },
        {
          "name": "vertical-offset",
          "description": "Provide custom offset, positive or negative",
          "type": "string"
        },
        {
          "name": "no-auto-close",
          "description": "Opt out of automatically closing on focus or click outside of the dropdown content",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-fit",
          "description": "Opt out of auto-sizing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-focus",
          "description": "Opt out of focus being automatically moved to the first focusable element in the dropdown when opened",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding",
          "description": "Render with no padding",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding-footer",
          "description": "Render the footer with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding-header",
          "description": "Render the header with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-pointer",
          "description": "Render without a pointer",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "align",
          "attribute": "align",
          "description": "Optionally align dropdown to either start or end. If not set, the dropdown will attempt be centred.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "attribute": "boundary",
          "description": "Optionally provide boundaries to where the dropdown will appear. Valid properties are \"above\", \"below\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "maxWidth",
          "attribute": "max-width",
          "description": "Override default max-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "minWidth",
          "attribute": "min-width",
          "description": "Override default min-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "maxHeight",
          "attribute": "max-height",
          "description": "Override max-height. Note that the default behaviour is to be as tall as necessary within the viewport, so this property is usually not needed.",
          "type": "number"
        },
        {
          "name": "verticalOffset",
          "attribute": "vertical-offset",
          "description": "Provide custom offset, positive or negative",
          "type": "string"
        },
        {
          "name": "opened"
        },
        {
          "name": "noAutoClose",
          "attribute": "no-auto-close",
          "description": "Opt out of automatically closing on focus or click outside of the dropdown content",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAutoFit",
          "attribute": "no-auto-fit",
          "description": "Opt out of auto-sizing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAutoFocus",
          "attribute": "no-auto-focus",
          "description": "Opt out of focus being automatically moved to the first focusable element in the dropdown when opened",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPadding",
          "attribute": "no-padding",
          "description": "Render with no padding",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPaddingFooter",
          "attribute": "no-padding-footer",
          "description": "Render the footer with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPaddingHeader",
          "attribute": "no-padding-header",
          "description": "Render the header with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPointer",
          "attribute": "no-pointer",
          "description": "Render without a pointer",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-dropdown-open",
          "description": "Dispatched when the dropdown is opened"
        },
        {
          "name": "d2l-dropdown-close",
          "description": "Dispatched when the dropdown is closed"
        },
        {
          "name": "d2l-dropdown-position",
          "description": "Dispatched when the dropdown position finishes adjusting"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Anything inside of \"d2l-dropdown-content\" that isn't in the \"header\" or \"footer\" slots appears as regular content"
        },
        {
          "name": "header",
          "description": "Sticky container at the top of the dropdown"
        },
        {
          "name": "footer",
          "description": "Sticky container at the bottom of the dropdown"
        }
      ]
    },
    {
      "name": "d2l-dropdown-context-menu",
      "path": "./components/dropdown/dropdown-context-menu.js",
      "description": "A simple/minimal opener for dropdown content.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: Label for the context-menu button",
          "type": "string"
        },
        {
          "name": "translucent",
          "description": "Attribute for busy/rich backgrounds",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Label for the context-menu button",
          "type": "string"
        },
        {
          "name": "translucent",
          "attribute": "translucent",
          "description": "Attribute for busy/rich backgrounds",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dropdownOpener",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "noAutoOpen",
          "attribute": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "visibleOnAncestor",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Dropdown content (e.g., \"d2l-dropdown-content\", \"d2l-dropdown-menu\" or \"d2l-dropdown-tabs\")"
        }
      ]
    },
    {
      "name": "d2l-dropdown-menu",
      "path": "./components/dropdown/dropdown-menu.js",
      "description": "A container for a \"d2l-menu\". It provides additional support on top of \"d2l-dropdown-content\" for closing the menu when menu items are selected, resetting to the root of nested menus when reopening and automatic resizing when the menu resizes.",
      "attributes": [
        {
          "name": "theme",
          "type": "string"
        },
        {
          "name": "align",
          "description": "Optionally align dropdown to either start or end. If not set, the dropdown will attempt be centred.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "description": "Optionally provide boundaries to where the dropdown will appear. Valid properties are \"above\", \"below\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "max-width",
          "description": "Override default max-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "min-width",
          "description": "Override default min-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "max-height",
          "description": "Override max-height. Note that the default behaviour is to be as tall as necessary within the viewport, so this property is usually not needed.",
          "type": "number"
        },
        {
          "name": "vertical-offset",
          "description": "Provide custom offset, positive or negative",
          "type": "string"
        },
        {
          "name": "no-auto-close",
          "description": "Opt out of automatically closing on focus or click outside of the dropdown content",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-fit",
          "description": "Opt out of auto-sizing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-focus",
          "description": "Opt out of focus being automatically moved to the first focusable element in the dropdown when opened",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "no-padding",
          "description": "Render with no padding",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "no-padding-footer",
          "description": "Render the footer with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding-header",
          "description": "Render the header with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-pointer",
          "description": "Render without a pointer",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "theme",
          "attribute": "theme",
          "type": "string"
        },
        {
          "name": "align",
          "attribute": "align",
          "description": "Optionally align dropdown to either start or end. If not set, the dropdown will attempt be centred.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "attribute": "boundary",
          "description": "Optionally provide boundaries to where the dropdown will appear. Valid properties are \"above\", \"below\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "maxWidth",
          "attribute": "max-width",
          "description": "Override default max-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "minWidth",
          "attribute": "min-width",
          "description": "Override default min-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "maxHeight",
          "attribute": "max-height",
          "description": "Override max-height. Note that the default behaviour is to be as tall as necessary within the viewport, so this property is usually not needed.",
          "type": "number"
        },
        {
          "name": "verticalOffset",
          "attribute": "vertical-offset",
          "description": "Provide custom offset, positive or negative",
          "type": "string"
        },
        {
          "name": "opened"
        },
        {
          "name": "noAutoClose",
          "attribute": "no-auto-close",
          "description": "Opt out of automatically closing on focus or click outside of the dropdown content",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAutoFit",
          "attribute": "no-auto-fit",
          "description": "Opt out of auto-sizing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAutoFocus",
          "attribute": "no-auto-focus",
          "description": "Opt out of focus being automatically moved to the first focusable element in the dropdown when opened",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "noPadding",
          "attribute": "no-padding",
          "description": "Render with no padding",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "noPaddingFooter",
          "attribute": "no-padding-footer",
          "description": "Render the footer with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPaddingHeader",
          "attribute": "no-padding-header",
          "description": "Render the header with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPointer",
          "attribute": "no-pointer",
          "description": "Render without a pointer",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-dropdown-open",
          "description": "Dispatched when the dropdown is opened"
        },
        {
          "name": "d2l-dropdown-close",
          "description": "Dispatched when the dropdown is closed"
        },
        {
          "name": "d2l-dropdown-position",
          "description": "Dispatched when the dropdown position finishes adjusting"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Anything inside of \"d2l-dropdown-content\" that isn't in the \"header\" or \"footer\" slots appears as regular content"
        },
        {
          "name": "header",
          "description": "Sticky container at the top of the dropdown"
        },
        {
          "name": "footer",
          "description": "Sticky container at the bottom of the dropdown"
        }
      ]
    },
    {
      "name": "d2l-dropdown-more",
      "path": "./components/dropdown/dropdown-more.js",
      "description": "A simple/minimal opener for dropdown content.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: Label for the more button",
          "type": "string"
        },
        {
          "name": "translucent",
          "description": "Attribute for busy/rich backgrounds",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Label for the more button",
          "type": "string"
        },
        {
          "name": "translucent",
          "attribute": "translucent",
          "description": "Attribute for busy/rich backgrounds",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dropdownOpener",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "noAutoOpen",
          "attribute": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "visibleOnAncestor",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Dropdown content (e.g., \"d2l-dropdown-content\", \"d2l-dropdown-menu\" or \"d2l-dropdown-tabs\")"
        }
      ]
    },
    {
      "name": "d2l-dropdown-tabs",
      "path": "./components/dropdown/dropdown-tabs.js",
      "description": "A container for a \"d2l-tabs\" component. It provides additional support on top of \"d2l-dropdown-content\" for automatic resizing when the tab changes.",
      "attributes": [
        {
          "name": "align",
          "description": "Optionally align dropdown to either start or end. If not set, the dropdown will attempt be centred.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "description": "Optionally provide boundaries to where the dropdown will appear. Valid properties are \"above\", \"below\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "max-width",
          "description": "Override default max-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "min-width",
          "description": "Override default min-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "max-height",
          "description": "Override max-height. Note that the default behaviour is to be as tall as necessary within the viewport, so this property is usually not needed.",
          "type": "number"
        },
        {
          "name": "vertical-offset",
          "description": "Provide custom offset, positive or negative",
          "type": "string"
        },
        {
          "name": "no-auto-close",
          "description": "Opt out of automatically closing on focus or click outside of the dropdown content",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-fit",
          "description": "Opt out of auto-sizing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-auto-focus",
          "description": "Opt out of focus being automatically moved to the first focusable element in the dropdown when opened",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding",
          "description": "Render with no padding",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding-footer",
          "description": "Render the footer with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-padding-header",
          "description": "Render the header with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-pointer",
          "description": "Render without a pointer",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "align",
          "attribute": "align",
          "description": "Optionally align dropdown to either start or end. If not set, the dropdown will attempt be centred.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "attribute": "boundary",
          "description": "Optionally provide boundaries to where the dropdown will appear. Valid properties are \"above\", \"below\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "maxWidth",
          "attribute": "max-width",
          "description": "Override default max-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "minWidth",
          "attribute": "min-width",
          "description": "Override default min-width (undefined). Specify a number that would be the px value.",
          "type": "number"
        },
        {
          "name": "maxHeight",
          "attribute": "max-height",
          "description": "Override max-height. Note that the default behaviour is to be as tall as necessary within the viewport, so this property is usually not needed.",
          "type": "number"
        },
        {
          "name": "verticalOffset",
          "attribute": "vertical-offset",
          "description": "Provide custom offset, positive or negative",
          "type": "string"
        },
        {
          "name": "opened"
        },
        {
          "name": "noAutoClose",
          "attribute": "no-auto-close",
          "description": "Opt out of automatically closing on focus or click outside of the dropdown content",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAutoFit",
          "attribute": "no-auto-fit",
          "description": "Opt out of auto-sizing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noAutoFocus",
          "attribute": "no-auto-focus",
          "description": "Opt out of focus being automatically moved to the first focusable element in the dropdown when opened",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPadding",
          "attribute": "no-padding",
          "description": "Render with no padding",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPaddingFooter",
          "attribute": "no-padding-footer",
          "description": "Render the footer with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPaddingHeader",
          "attribute": "no-padding-header",
          "description": "Render the header with no padding (if it has content)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noPointer",
          "attribute": "no-pointer",
          "description": "Render without a pointer",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-dropdown-open",
          "description": "Dispatched when the dropdown is opened"
        },
        {
          "name": "d2l-dropdown-close",
          "description": "Dispatched when the dropdown is closed"
        },
        {
          "name": "d2l-dropdown-position",
          "description": "Dispatched when the dropdown position finishes adjusting"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Anything inside of \"d2l-dropdown-content\" that isn't in the \"header\" or \"footer\" slots appears as regular content"
        },
        {
          "name": "header",
          "description": "Sticky container at the top of the dropdown"
        },
        {
          "name": "footer",
          "description": "Sticky container at the bottom of the dropdown"
        }
      ]
    },
    {
      "name": "d2l-dropdown",
      "path": "./components/dropdown/dropdown.js",
      "description": "A generic opener for dropdown content, enabling alternate opener implementation using existing elements/components. Provide and indicate your own opener element with the class attribute value \"d2l-dropdown-opener\".  Wire-up is automatic.",
      "attributes": [
        {
          "name": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "dropdownOpener",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "noAutoOpen",
          "attribute": "no-auto-open",
          "description": "Prevents the dropdown from opening automatically on or on key press",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the dropdown opener",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Dropdown content (e.g., \"d2l-dropdown-content\", \"d2l-dropdown-menu\" or \"d2l-dropdown-tabs\")"
        }
      ]
    },
    {
      "name": "d2l-expand-collapse-content",
      "path": "./components/expand-collapse/expand-collapse-content.js",
      "attributes": [
        {
          "name": "expanded",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "expanded",
          "attribute": "expanded",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-expand-collapse-content-expand"
        },
        {
          "name": "d2l-expand-collapse-content-collapse"
        }
      ]
    },
    {
      "name": "d2l-focus-trap",
      "path": "./components/focus-trap/focus-trap.js",
      "attributes": [
        {
          "name": "trap",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "trap",
          "attribute": "trap",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-focus-trap-enter"
        }
      ]
    },
    {
      "name": "d2l-form-demo",
      "path": "./components/form/demo/form-demo.js"
    },
    {
      "name": "d2l-form-dialog-demo",
      "path": "./components/form/demo/form-dialog-demo.js"
    },
    {
      "name": "d2l-form-native-demo",
      "path": "./components/form/demo/form-native-demo.js"
    },
    {
      "name": "d2l-form-panel-demo",
      "path": "./components/form/demo/form-panel-demo.js"
    },
    {
      "name": "d2l-form-error-summary",
      "path": "./components/form/form-errory-summary.js",
      "properties": [
        {
          "name": "errors",
          "type": "object",
          "default": "[]"
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-form-native",
      "path": "./components/form/form-native.js",
      "description": "A component that can be used to build sections containing interactive controls that are validated and submitted as a group.\nThese interactive controls are submitted using a native HTML form submission.",
      "attributes": [
        {
          "name": "action",
          "description": "The URL that processes the form submission.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "enctype",
          "description": "If the value of the method attribute is post, enctype is the MIME type of the form submission.",
          "type": "'application/x-www-form-urlencoded'|'multipart/form-data'|'text/plain'",
          "default": "\"application/x-www-form-urlencoded\""
        },
        {
          "name": "method",
          "description": "The HTTP method to submit the form with.",
          "type": "'get'|'post'",
          "default": "\"get\""
        },
        {
          "name": "target",
          "description": "Indicates where to display the response after submitting the form.",
          "type": "'_self '|'_blank'|'_parent'|'_top'",
          "default": "\"_self\""
        },
        {
          "name": "track-changes",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "action",
          "attribute": "action",
          "description": "The URL that processes the form submission.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "enctype",
          "attribute": "enctype",
          "description": "If the value of the method attribute is post, enctype is the MIME type of the form submission.",
          "type": "'application/x-www-form-urlencoded'|'multipart/form-data'|'text/plain'",
          "default": "\"application/x-www-form-urlencoded\""
        },
        {
          "name": "method",
          "attribute": "method",
          "description": "The HTTP method to submit the form with.",
          "type": "'get'|'post'",
          "default": "\"get\""
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Indicates where to display the response after submitting the form.",
          "type": "'_self '|'_blank'|'_parent'|'_top'",
          "default": "\"_self\""
        },
        {
          "name": "trackChanges",
          "attribute": "track-changes",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "submit",
          "description": "Dispatched when the form is submitted"
        },
        {
          "name": "formdata",
          "description": "Dispatched after the entry list representing the form's data is constructed. This happens when the form is submitted."
        },
        {
          "name": "d2l-form-errors-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The native and custom form elements that participate in validation and submission"
        }
      ]
    },
    {
      "name": "d2l-form",
      "path": "./components/form/form.js",
      "description": "A component that can be used to build sections containing interactive controls that are validated and submitted as a group.\nValues of these interactive controls are aggregated but the user is responsible for handling submission via the @d2l-form-submit event.",
      "attributes": [
        {
          "name": "no-nesting",
          "description": "Prevents the form from being validated and submitted when an ancestor form is validated or submitted",
          "type": "boolean"
        },
        {
          "name": "track-changes",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "noNesting",
          "attribute": "no-nesting",
          "description": "Prevents the form from being validated and submitted when an ancestor form is validated or submitted",
          "type": "boolean"
        },
        {
          "name": "trackChanges",
          "attribute": "track-changes",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-form-submit",
          "description": "Dispatched when the form is submitted"
        },
        {
          "name": "d2l-form-connect"
        },
        {
          "name": "d2l-form-disconnected"
        },
        {
          "name": "d2l-form-invalid"
        },
        {
          "name": "d2l-form-errors-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The native and custom form elements that participate in validation and submission"
        }
      ]
    },
    {
      "name": "d2l-test-form-element",
      "path": "./components/form/test/form-element.js",
      "attributes": [
        {
          "name": "tooltipMessage",
          "type": "string"
        },
        {
          "name": "isValidationCustomValid",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "value",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "tooltipMessage",
          "attribute": "tooltipMessage",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "isValidationCustomValid",
          "attribute": "isValidationCustomValid",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "value",
          "attribute": "value",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-test-nested-form",
      "path": "./components/form/test/nested-form.js",
      "attributes": [
        {
          "name": "no-nesting",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "noNesting",
          "attribute": "no-nesting",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-hierarchical-view",
      "path": "./components/hierarchical-view/hierarchical-view.js",
      "properties": [
        {
          "name": "hierarchicalView",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "d2l-hierarchical-view-hide-start"
        },
        {
          "name": "d2l-hierarchical-view-show-start"
        },
        {
          "name": "d2l-hierarchical-view-hide-complete"
        },
        {
          "name": "d2l-hierarchical-view-show-complete"
        },
        {
          "name": "d2l-hierarchical-view-resize"
        }
      ]
    },
    {
      "name": "d2l-html-block",
      "path": "./components/html-block/html-block.js",
      "description": "A component for displaying user-authored HTML."
    },
    {
      "name": "d2l-icon-demo-color-override",
      "path": "./components/icons/demo/icon-color-override.js"
    },
    {
      "name": "d2l-icon-demo-size-override",
      "path": "./components/icons/demo/icon-size-override.js"
    },
    {
      "name": "d2l-icon-custom",
      "path": "./components/icons/icon-custom.js",
      "attributes": [
        {
          "name": "size",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "size",
          "attribute": "size",
          "type": "string"
        }
      ]
    },
    {
      "name": "d2l-icon",
      "path": "./components/icons/icon.js",
      "attributes": [
        {
          "name": "icon",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "icon",
          "attribute": "icon",
          "type": "string"
        }
      ]
    },
    {
      "name": "d2l-test-input-radio-label",
      "path": "./components/inputs/demo/input-radio-label-test.js"
    },
    {
      "name": "d2l-test-input-radio-solo",
      "path": "./components/inputs/demo/input-radio-solo-test.js",
      "attributes": [
        {
          "name": "checked",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "invalid",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "checked",
          "attribute": "checked",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "d2l-test-input-select",
      "path": "./components/inputs/demo/input-select-test.js",
      "attributes": [
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "invalid",
          "type": "boolean"
        },
        {
          "name": "overflow",
          "type": "boolean"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean"
        },
        {
          "name": "overflow",
          "attribute": "overflow",
          "type": "boolean"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-input-checkbox-spacer",
      "path": "./components/inputs/input-checkbox-spacer.js",
      "description": "Used to align related content below checkboxes",
      "slots": [
        {
          "name": "",
          "description": "Additional related content"
        }
      ]
    },
    {
      "name": "d2l-input-checkbox",
      "path": "./components/inputs/input-checkbox.js",
      "description": "A component that can be used to show a checkbox and optional visible label.",
      "attributes": [
        {
          "name": "aria-label",
          "description": "Use when text on checkbox does not provide enough context",
          "type": "string"
        },
        {
          "name": "checked",
          "description": "Checked state",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "indeterminate",
          "description": "Sets checkbox to an indeterminate state",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the input",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "not-tabbable",
          "description": "Sets \"tabindex=\"-1\"\" on the checkbox",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"on\""
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "description": "Use when text on checkbox does not provide enough context",
          "type": "string"
        },
        {
          "name": "checked",
          "attribute": "checked",
          "description": "Checked state",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "indeterminate",
          "attribute": "indeterminate",
          "description": "Sets checkbox to an indeterminate state",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the input",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "notTabbable",
          "attribute": "not-tabbable",
          "description": "Sets \"tabindex=\"-1\"\" on the checkbox",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"on\""
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when the checkbox's state changes"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Checkbox information (e.g., text)"
        }
      ]
    },
    {
      "name": "d2l-input-date-range",
      "path": "./components/inputs/input-date-range.js",
      "description": "A component consisting of two input-date components - one for start of range and one for end of range. Values specified for these components (through start-value and/or end-value attributes) should be localized to the user's timezone if applicable and must be in ISO 8601 calendar date format (\"YYYY-MM-DD\").",
      "attributes": [
        {
          "name": "end-label",
          "description": "Accessible label for the end date input",
          "type": "string",
          "default": "\"\\\"End Date\\\"\""
        },
        {
          "name": "end-value",
          "description": "Value of the end date input",
          "type": "string"
        },
        {
          "name": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the date inputs",
          "type": "string"
        },
        {
          "name": "max-value",
          "description": "Maximum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "min-value",
          "description": "Minimum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "start-label",
          "description": "Accessible label for the start date input",
          "type": "string",
          "default": "\"\\\"Start Date\\\"\""
        },
        {
          "name": "start-value",
          "description": "Value of the start date input",
          "type": "string"
        },
        {
          "name": "auto-shift-dates",
          "description": "Automatically shifts end date when start date changes to keep same range",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "child-labels-hidden",
          "description": "Hides the start and end labels visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the inputs",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "inclusive-date-range",
          "description": "Validates on inclusive range (i.e., it is valid for start and end dates to be equal)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that values are required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "endLabel",
          "attribute": "end-label",
          "description": "Accessible label for the end date input",
          "type": "string",
          "default": "\"\\\"End Date\\\"\""
        },
        {
          "name": "endValue",
          "attribute": "end-value",
          "description": "Value of the end date input",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the date inputs",
          "type": "string"
        },
        {
          "name": "maxValue",
          "attribute": "max-value",
          "description": "Maximum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "minValue",
          "attribute": "min-value",
          "description": "Minimum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "startLabel",
          "attribute": "start-label",
          "description": "Accessible label for the start date input",
          "type": "string",
          "default": "\"\\\"Start Date\\\"\""
        },
        {
          "name": "startValue",
          "attribute": "start-value",
          "description": "Value of the start date input",
          "type": "string"
        },
        {
          "name": "autoShiftDates",
          "attribute": "auto-shift-dates",
          "description": "Automatically shifts end date when start date changes to keep same range",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "childLabelsHidden",
          "attribute": "child-labels-hidden",
          "description": "Hides the start and end labels visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the inputs",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "inclusiveDateRange",
          "attribute": "inclusive-date-range",
          "description": "Validates on inclusive range (i.e., it is valid for start and end dates to be equal)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that values are required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when there is a change in selected start date or selected end date. \"start-value\" and \"end-value\" contain the selected values and are formatted in ISO 8601 calendar date format (\"YYYY-MM-DD\")."
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-date-time-range-to",
      "path": "./components/inputs/input-date-time-range-to.js",
      "attributes": [
        {
          "name": "block-display",
          "description": "Force block (stacked) range display if true",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "display-to",
          "description": "Display localized \"to\" between the left and right slot contents",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "top-margin",
          "description": "Add margin-top for case where there would be a label above the range",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "blockDisplay",
          "attribute": "block-display",
          "description": "Force block (stacked) range display if true",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "displayTo",
          "attribute": "display-to",
          "description": "Display localized \"to\" between the left and right slot contents",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "topMargin",
          "attribute": "top-margin",
          "description": "Add margin-top for case where there would be a label above the range",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-date-time-range",
      "path": "./components/inputs/input-date-time-range.js",
      "description": "A component consisting of two input-date-time components - one for start of range and one for end of range. The time input only appears once a date is selected.",
      "attributes": [
        {
          "name": "end-label",
          "description": "Accessible label for the end date-time input",
          "type": "string",
          "default": "\"\\\"End Date\\\"\""
        },
        {
          "name": "end-value",
          "description": "Value of the end date-time input",
          "type": "string"
        },
        {
          "name": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the date-time inputs",
          "type": "string"
        },
        {
          "name": "max-value",
          "description": "Maximum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "min-value",
          "description": "Minimum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "start-label",
          "description": "Accessible label for the start date-time input",
          "type": "string",
          "default": "\"\\\"Start Date\\\"\""
        },
        {
          "name": "start-value",
          "description": "Value of the start date-time input",
          "type": "string"
        },
        {
          "name": "auto-shift-dates",
          "description": "Automatically shifts end date when start date changes to keep same range. If start and end date are equal, automatically shifts end time when start time changes.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "child-labels-hidden",
          "description": "Hides the start and end labels visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the inputs",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "inclusive-date-range",
          "description": "Validates on inclusive range (i.e., it is valid for start and end date-times to be equal)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "localized",
          "description": "Indicates that localization will be handled by the consumer. `*value` will not be converted from/to UTC.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that values are required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "endLabel",
          "attribute": "end-label",
          "description": "Accessible label for the end date-time input",
          "type": "string",
          "default": "\"\\\"End Date\\\"\""
        },
        {
          "name": "endValue",
          "attribute": "end-value",
          "description": "Value of the end date-time input",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the date-time inputs",
          "type": "string"
        },
        {
          "name": "maxValue",
          "attribute": "max-value",
          "description": "Maximum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "minValue",
          "attribute": "min-value",
          "description": "Minimum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "startLabel",
          "attribute": "start-label",
          "description": "Accessible label for the start date-time input",
          "type": "string",
          "default": "\"\\\"Start Date\\\"\""
        },
        {
          "name": "startValue",
          "attribute": "start-value",
          "description": "Value of the start date-time input",
          "type": "string"
        },
        {
          "name": "autoShiftDates",
          "attribute": "auto-shift-dates",
          "description": "Automatically shifts end date when start date changes to keep same range. If start and end date are equal, automatically shifts end time when start time changes.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "childLabelsHidden",
          "attribute": "child-labels-hidden",
          "description": "Hides the start and end labels visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the inputs",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "inclusiveDateRange",
          "attribute": "inclusive-date-range",
          "description": "Validates on inclusive range (i.e., it is valid for start and end date-times to be equal)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "localized",
          "attribute": "localized",
          "description": "Indicates that localization will be handled by the consumer. `*value` will not be converted from/to UTC.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that values are required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when there is a change in selected start date-time or selected end date-time. \"start-value\" and \"end-value\" contain the selected values and are formatted in ISO 8601 combined date and time format (\"YYYY-MM-DDTHH:mm:ss.sssZ\")."
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "start",
          "description": "Optional content that would appear below the start input-date-time"
        },
        {
          "name": "end",
          "description": "Optional content that would appear below the end input-date-time"
        }
      ]
    },
    {
      "name": "d2l-input-date-time",
      "path": "./components/inputs/input-date-time.js",
      "description": "A component that consists of a \"<d2l-input-date>\" and a \"<d2l-input-time>\" component. The time input only appears once a date is selected. This component displays the \"value\" if one is specified, and reflects the selected value when one is selected or entered.",
      "attributes": [
        {
          "name": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the date and time inputs",
          "type": "string"
        },
        {
          "name": "max-value",
          "description": "Maximum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "min-value",
          "description": "Minimum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "value",
          "description": "Value of the input",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "localized",
          "description": "Indicates that localization will be handled by the consumer. `*value` will not be converted from/to UTC.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "time-default-value",
          "description": "Default value of time input. Accepts times formatted as \"hh:mm:ss\", and the keywords \"startOfDay\" and \"endOfDay\".",
          "type": "'startOfDay'|'endOfDay'|string",
          "default": "\"startOfDay\""
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the date and time inputs",
          "type": "string"
        },
        {
          "name": "maxValue",
          "attribute": "max-value",
          "description": "Maximum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "minValue",
          "attribute": "min-value",
          "description": "Minimum valid date/time that could be selected by a user",
          "type": "string"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "localized",
          "attribute": "localized",
          "description": "Indicates that localization will be handled by the consumer. `*value` will not be converted from/to UTC.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "timeDefaultValue",
          "attribute": "time-default-value",
          "description": "Default value of time input. Accepts times formatted as \"hh:mm:ss\", and the keywords \"startOfDay\" and \"endOfDay\".",
          "type": "'startOfDay'|'endOfDay'|string",
          "default": "\"startOfDay\""
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when there is a change in selected date or selected time. \"value\" contains the selected value and is formatted in ISO 8601 combined date and time format (\"YYYY-MM-DDTHH:mm:ss.sssZ\")."
        },
        {
          "name": "d2l-input-date-time-dropdown-toggle"
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-date",
      "path": "./components/inputs/input-date.js",
      "description": "A component that consists of a text input field for typing a date and an attached calendar (d2l-calendar) dropdown. It displays the \"value\" if one is specified, or a placeholder if not, and reflects the selected value when one is selected in the calendar or entered in the text input.",
      "attributes": [
        {
          "name": "label",
          "description": "REQUIRED: Accessible label for the input",
          "type": "string"
        },
        {
          "name": "max-value",
          "description": "Maximum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "min-value",
          "description": "Minimum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "empty-text",
          "description": "Text that appears as a placeholder in the input to reassure users that they can choose not to provide a value (usually not necessary)",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidateminmax",
          "description": "Disables validation of max and min value. The min and max value will still be enforced but the component will not be put into an error state or show an error tooltip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Accessible label for the input",
          "type": "string"
        },
        {
          "name": "maxValue",
          "attribute": "max-value",
          "description": "Maximum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "minValue",
          "attribute": "min-value",
          "description": "Minimum valid date that could be selected by a user",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "emptyText",
          "attribute": "empty-text",
          "description": "Text that appears as a placeholder in the input to reassure users that they can choose not to provide a value (usually not necessary)",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidateMinMax",
          "attribute": "novalidateminmax",
          "description": "Disables validation of max and min value. The min and max value will still be enforced but the component will not be put into an error state or show an error tooltip.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when there is a change in selected date. \"value\" contains the selected value and is formatted in ISO 8601 calendar date format (\"YYYY-MM-DD\")."
        },
        {
          "name": "d2l-input-date-dropdown-toggle"
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-fieldset",
      "path": "./components/inputs/input-fieldset.js",
      "description": "A component wrapper to be used when a page contains multiple inputs which are related (for example to form an address) to wrap those related inputs.",
      "attributes": [
        {
          "name": "label",
          "description": "REQUIRED: Label for the fieldset",
          "type": "string"
        },
        {
          "name": "label-hidden",
          "description": "Hides the label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that a value is required for inputs in the fieldset",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Label for the fieldset",
          "type": "string"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that a value is required for inputs in the fieldset",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Related input components"
        }
      ]
    },
    {
      "name": "d2l-input-number",
      "path": "./components/inputs/input-number.js",
      "attributes": [
        {
          "name": "autocomplete",
          "type": "string"
        },
        {
          "name": "hide-invalid-icon",
          "type": "boolean"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "max",
          "type": "number"
        },
        {
          "name": "min",
          "type": "number"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "unit",
          "type": "string"
        },
        {
          "name": "max-fraction-digits",
          "type": "number"
        },
        {
          "name": "min-fraction-digits",
          "type": "number"
        },
        {
          "name": "trailing-zeroes",
          "type": "boolean"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "value-trailing-zeroes",
          "type": "string"
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "input-width",
          "type": "string",
          "default": "\"4rem\""
        },
        {
          "name": "label-hidden",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "max-exclusive",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "min-exclusive",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "autocomplete",
          "attribute": "autocomplete",
          "type": "string"
        },
        {
          "name": "hideInvalidIcon",
          "attribute": "hide-invalid-icon",
          "type": "boolean"
        },
        {
          "name": "label",
          "attribute": "label",
          "type": "string"
        },
        {
          "name": "max",
          "attribute": "max",
          "type": "number"
        },
        {
          "name": "min",
          "attribute": "min",
          "type": "number"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "type": "string"
        },
        {
          "name": "title",
          "attribute": "title",
          "type": "string"
        },
        {
          "name": "unit",
          "attribute": "unit",
          "type": "string"
        },
        {
          "name": "maxFractionDigits",
          "attribute": "max-fraction-digits",
          "type": "number"
        },
        {
          "name": "minFractionDigits",
          "attribute": "min-fraction-digits",
          "type": "number"
        },
        {
          "name": "trailingZeroes",
          "attribute": "trailing-zeroes",
          "type": "boolean"
        },
        {
          "name": "value",
          "attribute": "value",
          "type": "number"
        },
        {
          "name": "valueTrailingZeroes",
          "attribute": "value-trailing-zeroes",
          "type": "string"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "inputWidth",
          "attribute": "input-width",
          "type": "string",
          "default": "\"4rem\""
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "maxExclusive",
          "attribute": "max-exclusive",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "minExclusive",
          "attribute": "min-exclusive",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change"
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-percent",
      "path": "./components/inputs/input-percent.js",
      "description": "This component wraps the \"<d2l-input-number>\" tag and is intended for inputting percent values.",
      "attributes": [
        {
          "name": "input-width",
          "description": "Restricts the maximum width of the input box without impacting the width of the label.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "REQUIRED: Label for the input",
          "type": "string"
        },
        {
          "name": "max-fraction-digits",
          "description": "Maximum number of decimal values to show (rounds value up or down).",
          "type": "number"
        },
        {
          "name": "min-fraction-digits",
          "description": "Minimum number of decimal values to show.",
          "type": "number"
        },
        {
          "name": "placeholder",
          "description": "Placeholder text",
          "type": "string"
        },
        {
          "name": "title",
          "description": "Text for additional screenreader and mouseover context",
          "type": "string"
        },
        {
          "name": "value",
          "description": "Value of the input",
          "type": "number"
        },
        {
          "name": "autofocus",
          "description": "When set, will automatically place focus on the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "inputWidth",
          "attribute": "input-width",
          "description": "Restricts the maximum width of the input box without impacting the width of the label.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Label for the input",
          "type": "string"
        },
        {
          "name": "maxFractionDigits",
          "attribute": "max-fraction-digits",
          "description": "Maximum number of decimal values to show (rounds value up or down).",
          "type": "number"
        },
        {
          "name": "minFractionDigits",
          "attribute": "min-fraction-digits",
          "description": "Minimum number of decimal values to show.",
          "type": "number"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Placeholder text",
          "type": "string"
        },
        {
          "name": "title",
          "attribute": "title",
          "description": "Text for additional screenreader and mouseover context",
          "type": "string"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input",
          "type": "number"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "description": "When set, will automatically place focus on the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when an alteration to the value is committed (typically after focus is lost) by the user"
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "after",
          "description": "Slot beside the input on the right side. Useful for an \"icon\" or \"button-icon\"."
        }
      ]
    },
    {
      "name": "d2l-input-radio-spacer",
      "path": "./components/inputs/input-radio-spacer.js",
      "description": "Used to align related content below radio buttons",
      "slots": [
        {
          "name": "",
          "description": "Additional related content"
        }
      ]
    },
    {
      "name": "d2l-input-search",
      "path": "./components/inputs/input-search.js",
      "description": "This component wraps the native \"<input type=\"search\">\"\" element and is for text searching.",
      "attributes": [
        {
          "name": "label",
          "description": "REQUIRED: Accessible label for the input",
          "type": "string"
        },
        {
          "name": "maxlength",
          "description": "Imposes an upper character limit",
          "type": "number"
        },
        {
          "name": "placeholder",
          "description": "Placeholder text",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-clear",
          "description": "Prevents the \"clear\" button from appearing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Accessible label for the input",
          "type": "string"
        },
        {
          "name": "maxlength",
          "attribute": "maxlength",
          "description": "Imposes an upper character limit",
          "type": "number"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Placeholder text",
          "type": "string"
        },
        {
          "name": "lastSearchValue",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noClear",
          "attribute": "no-clear",
          "description": "Prevents the \"clear\" button from appearing",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"\""
        }
      ],
      "events": [
        {
          "name": "d2l-input-search-searched",
          "description": "Dispatched when a search is performed"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-text",
      "path": "./components/inputs/input-text.js",
      "description": "This component wraps the native \"<input type=\"text\">\" tag and is intended primarily for inputting generic text, email addresses and URLs.",
      "attributes": [
        {
          "name": "aria-haspopup",
          "description": "Indicates that the input has a popup menu",
          "type": "string"
        },
        {
          "name": "aria-invalid",
          "description": "Indicates that the input value is invalid",
          "type": "string"
        },
        {
          "name": "atomic",
          "description": "Specifies whether or not the screen reader should always present changes to the live region as a whole.\nThis only applies if live is set to polite or assertive.",
          "type": "string"
        },
        {
          "name": "autocomplete",
          "description": "Specifies which types of values can be autofilled by the browser",
          "type": "string"
        },
        {
          "name": "description",
          "description": "Additional information communicated in the aria-describedby on the input",
          "type": "string"
        },
        {
          "name": "input-width",
          "description": "Restricts the maximum width of the input box without impacting the width of the label.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "REQUIRED: Label for the input",
          "type": "string"
        },
        {
          "name": "live",
          "description": "Set the priority with which screen readers should treat updates to the input's live text region",
          "type": "string"
        },
        {
          "name": "max",
          "description": "For number inputs, maximum value",
          "type": "string"
        },
        {
          "name": "maxlength",
          "description": "Imposes an upper character limit",
          "type": "number"
        },
        {
          "name": "min",
          "description": "For number inputs, minimum value",
          "type": "string"
        },
        {
          "name": "minlength",
          "description": "Imposes a lower character limit",
          "type": "number"
        },
        {
          "name": "pattern",
          "description": "Regular expression pattern to validate the value",
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "Placeholder text",
          "type": "string"
        },
        {
          "name": "size",
          "description": "Size of the input",
          "type": "number"
        },
        {
          "name": "step",
          "description": "For number inputs, sets the step size",
          "type": "string"
        },
        {
          "name": "title",
          "description": "Text for additional screenreader and mouseover context",
          "type": "string"
        },
        {
          "name": "unit",
          "description": "Unit associated with the input value, displayed next to input and announced as part of the label",
          "type": "string"
        },
        {
          "name": "autofocus",
          "description": "When set, will automatically place focus on the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hide-invalid-icon",
          "description": "Hide the alert icon when input is invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "prevent-submit",
          "description": "Prevents pressing ENTER from submitting forms",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "description": "Makes the input read-only",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "description": "The type of the text input",
          "type": "'text'|'email'|'number'|'password'|'tel'|'url'",
          "default": "\"text\""
        },
        {
          "name": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "ariaHaspopup",
          "attribute": "aria-haspopup",
          "description": "Indicates that the input has a popup menu",
          "type": "string"
        },
        {
          "name": "ariaInvalid",
          "attribute": "aria-invalid",
          "description": "Indicates that the input value is invalid",
          "type": "string"
        },
        {
          "name": "atomic",
          "attribute": "atomic",
          "description": "Specifies whether or not the screen reader should always present changes to the live region as a whole.\nThis only applies if live is set to polite or assertive.",
          "type": "string"
        },
        {
          "name": "autocomplete",
          "attribute": "autocomplete",
          "description": "Specifies which types of values can be autofilled by the browser",
          "type": "string"
        },
        {
          "name": "description",
          "attribute": "description",
          "description": "Additional information communicated in the aria-describedby on the input",
          "type": "string"
        },
        {
          "name": "inputWidth",
          "attribute": "input-width",
          "description": "Restricts the maximum width of the input box without impacting the width of the label.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Label for the input",
          "type": "string"
        },
        {
          "name": "live",
          "attribute": "live",
          "description": "Set the priority with which screen readers should treat updates to the input's live text region",
          "type": "string"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "For number inputs, maximum value",
          "type": "string"
        },
        {
          "name": "maxlength",
          "attribute": "maxlength",
          "description": "Imposes an upper character limit",
          "type": "number"
        },
        {
          "name": "min",
          "attribute": "min",
          "description": "For number inputs, minimum value",
          "type": "string"
        },
        {
          "name": "minlength",
          "attribute": "minlength",
          "description": "Imposes a lower character limit",
          "type": "number"
        },
        {
          "name": "pattern",
          "attribute": "pattern",
          "description": "Regular expression pattern to validate the value",
          "type": "string"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Placeholder text",
          "type": "string"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Size of the input",
          "type": "number"
        },
        {
          "name": "step",
          "attribute": "step",
          "description": "For number inputs, sets the step size",
          "type": "string"
        },
        {
          "name": "title",
          "attribute": "title",
          "description": "Text for additional screenreader and mouseover context",
          "type": "string"
        },
        {
          "name": "unit",
          "attribute": "unit",
          "description": "Unit associated with the input value, displayed next to input and announced as part of the label",
          "type": "string"
        },
        {
          "name": "selectionStart"
        },
        {
          "name": "autofocus",
          "attribute": "autofocus",
          "description": "When set, will automatically place focus on the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hideInvalidIcon",
          "attribute": "hide-invalid-icon",
          "description": "Hide the alert icon when input is invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "preventSubmit",
          "attribute": "prevent-submit",
          "description": "Prevents pressing ENTER from submitting forms",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "attribute": "readonly",
          "description": "Makes the input read-only",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "The type of the text input",
          "type": "'text'|'email'|'number'|'password'|'tel'|'url'",
          "default": "\"text\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when an alteration to the value is committed (typically after focus is lost) by the user"
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "left",
          "description": "Slot within the input on the left side. Useful for an \"icon\" or \"button-icon\"."
        },
        {
          "name": "right",
          "description": "Slot within the input on the right side. Useful for an \"icon\" or \"button-icon\"."
        },
        {
          "name": "after",
          "description": "Slot beside the input on the right side. Useful for an \"icon\" or \"button-icon\"."
        }
      ]
    },
    {
      "name": "d2l-input-textarea",
      "path": "./components/inputs/input-textarea.js",
      "attributes": [
        {
          "name": "aria-invalid",
          "description": "Indicates that the input value is invalid.",
          "type": "string"
        },
        {
          "name": "description",
          "description": "Additional information communicated in the aria-describedby on the input.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "REQUIRED: Label for the input.",
          "type": "string"
        },
        {
          "name": "maxlength",
          "description": "Imposes an upper character limit.",
          "type": "number"
        },
        {
          "name": "minlength",
          "description": "Imposes a lower character limit.",
          "type": "number"
        },
        {
          "name": "no-border",
          "description": "Hides the border.",
          "type": "boolean"
        },
        {
          "name": "no-padding",
          "description": "Removes default left/right padding.",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "Placeholder text.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the input.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute).",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "max-rows",
          "description": "Maximum number of rows before scrolling.",
          "type": "number",
          "default": "11"
        },
        {
          "name": "rows",
          "description": "Minimum number of rows.",
          "type": "number",
          "default": "5"
        },
        {
          "name": "required",
          "description": "Indicates that a value is required.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "Value of the input.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "ariaInvalid",
          "attribute": "aria-invalid",
          "description": "Indicates that the input value is invalid.",
          "type": "string"
        },
        {
          "name": "description",
          "attribute": "description",
          "description": "Additional information communicated in the aria-describedby on the input.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Label for the input.",
          "type": "string"
        },
        {
          "name": "maxlength",
          "attribute": "maxlength",
          "description": "Imposes an upper character limit.",
          "type": "number"
        },
        {
          "name": "minlength",
          "attribute": "minlength",
          "description": "Imposes a lower character limit.",
          "type": "number"
        },
        {
          "name": "noBorder",
          "attribute": "no-border",
          "description": "Hides the border.",
          "type": "boolean"
        },
        {
          "name": "noPadding",
          "attribute": "no-padding",
          "description": "Removes default left/right padding.",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Placeholder text.",
          "type": "string"
        },
        {
          "name": "textarea"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute).",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "maxRows",
          "attribute": "max-rows",
          "description": "Maximum number of rows before scrolling.",
          "type": "number",
          "default": "11"
        },
        {
          "name": "rows",
          "attribute": "rows",
          "description": "Minimum number of rows.",
          "type": "number",
          "default": "5"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that a value is required.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "change"
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-time-range",
      "path": "./components/inputs/input-time-range.js",
      "description": "A component consisting of two input-time components - one for start of range and one for end of range. Values specified for these components (through start-value and/or end-value attributes) should be localized to the user's timezone if applicable and must be in ISO 8601 time format (\"hh:mm:ss\").",
      "attributes": [
        {
          "name": "end-label",
          "description": "Accessible label for the end time input",
          "type": "string",
          "default": "\"\\\"End Time\\\"\""
        },
        {
          "name": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the time inputs",
          "type": "string"
        },
        {
          "name": "start-label",
          "description": "Accessible label for the start time input",
          "type": "string",
          "default": "\"\\\"Start Time\\\"\""
        },
        {
          "name": "end-value",
          "description": "Value of the end time input",
          "type": "string"
        },
        {
          "name": "start-value",
          "description": "Value of the start time input",
          "type": "string"
        },
        {
          "name": "auto-shift-times",
          "description": "Automatically shifts end time when start time changes to keep same range",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "child-labels-hidden",
          "description": "Hides the start and end labels visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the inputs",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "enforce-time-intervals",
          "description": "Rounds typed input up to nearest valid interval time (specified with \"time-interval\")",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "inclusive-time-range",
          "description": "Validates on inclusive range (i.e., it is valid for start and end times to be equal)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that values are required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "time-interval",
          "description": "Number of minutes between times shown in dropdown menu",
          "type": "'five'|'ten'|'fifteen'|'twenty'|'thirty'|'sixty'",
          "default": "\"thirty\""
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "endLabel",
          "attribute": "end-label",
          "description": "Accessible label for the end time input",
          "type": "string",
          "default": "\"\\\"End Time\\\"\""
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Accessible label for the input fieldset that wraps the time inputs",
          "type": "string"
        },
        {
          "name": "startLabel",
          "attribute": "start-label",
          "description": "Accessible label for the start time input",
          "type": "string",
          "default": "\"\\\"Start Time\\\"\""
        },
        {
          "name": "endValue",
          "attribute": "end-value",
          "description": "Value of the end time input",
          "type": "string"
        },
        {
          "name": "startValue",
          "attribute": "start-value",
          "description": "Value of the start time input",
          "type": "string"
        },
        {
          "name": "autoShiftTimes",
          "attribute": "auto-shift-times",
          "description": "Automatically shifts end time when start time changes to keep same range",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "childLabelsHidden",
          "attribute": "child-labels-hidden",
          "description": "Hides the start and end labels visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the inputs",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "enforceTimeIntervals",
          "attribute": "enforce-time-intervals",
          "description": "Rounds typed input up to nearest valid interval time (specified with \"time-interval\")",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "inclusiveTimeRange",
          "attribute": "inclusive-time-range",
          "description": "Validates on inclusive range (i.e., it is valid for start and end times to be equal)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the fieldset label visually",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that values are required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "timeInterval",
          "attribute": "time-interval",
          "description": "Number of minutes between times shown in dropdown menu",
          "type": "'five'|'ten'|'fifteen'|'twenty'|'thirty'|'sixty'",
          "default": "\"thirty\""
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when there is a change in selected start time or selected end time. \"start-value\" and \"end-value\" contain the selected values and are formatted in ISO 8601 calendar time format (\"hh:mm:ss\")."
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-input-time",
      "path": "./components/inputs/input-time.js",
      "description": "A component that consists of a text input field for typing a time and an attached dropdown for time selection. It displays the \"value\" if one is specified, or a placeholder if not, and reflects the selected value when one is selected in the dropdown or entered in the text input.",
      "attributes": [
        {
          "name": "default-value",
          "description": "Default value of input. Accepts times formatted as \"hh:mm:ss\", and the keywords \"startOfDay\" and \"endOfDay\".",
          "type": "'startOfDay'|'endOfDay'|string"
        },
        {
          "name": "label",
          "description": "REQUIRED: Accessible label for the input",
          "type": "string"
        },
        {
          "name": "max-height",
          "description": "Overrides max-height of the time dropdown menu",
          "type": "number"
        },
        {
          "name": "value",
          "description": "Value of the input",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "enforce-time-intervals",
          "description": "Rounds typed input up to nearest valid interval time (specified with \"time-interval\")",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "time-interval",
          "description": "Number of minutes between times shown in dropdown menu",
          "type": "'five'|'ten'|'fifteen'|'twenty'|'thirty'|'sixty'",
          "default": "\"thirty\""
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "novalidate",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "defaultValue",
          "attribute": "default-value",
          "description": "Default value of input. Accepts times formatted as \"hh:mm:ss\", and the keywords \"startOfDay\" and \"endOfDay\".",
          "type": "'startOfDay'|'endOfDay'|string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "REQUIRED: Accessible label for the input",
          "type": "string"
        },
        {
          "name": "maxHeight",
          "attribute": "max-height",
          "description": "Overrides max-height of the time dropdown menu",
          "type": "number"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value of the input",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the input",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "enforceTimeIntervals",
          "attribute": "enforce-time-intervals",
          "description": "Rounds typed input up to nearest valid interval time (specified with \"time-interval\")",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "attribute": "label-hidden",
          "description": "Hides the label visually (moves it to the input's \"aria-label\" attribute)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Indicates that a value is required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "timeInterval",
          "attribute": "time-interval",
          "description": "Number of minutes between times shown in dropdown menu",
          "type": "'five'|'ten'|'fifteen'|'twenty'|'thirty'|'sixty'",
          "default": "\"thirty\""
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name of the form control. Submitted with the form as part of a name/value pair.",
          "type": "string"
        },
        {
          "name": "formAssociated",
          "type": "boolean"
        },
        {
          "name": "validationMessage"
        },
        {
          "name": "validity",
          "type": "FormElementValidityState"
        },
        {
          "name": "forceInvalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "formValue"
        },
        {
          "name": "invalid",
          "attribute": "invalid",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noValidate",
          "attribute": "novalidate",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "validationError",
          "type": "string"
        },
        {
          "name": "childErrors",
          "type": "object"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Dispatched when there is a change in selected time. \"value\" contains the selected value and is formatted in ISO 8601 time format (\"hh:mm:ss\")."
        },
        {
          "name": "d2l-input-time-dropdown-toggle"
        },
        {
          "name": "d2l-input-time-hidden-content-width-change"
        },
        {
          "name": "d2l-form-element-errors-change"
        },
        {
          "name": "invalid-change"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-link",
      "path": "./components/link/link.js",
      "description": "This component can be used just like the native anchor tag.",
      "attributes": [
        {
          "name": "aria-label",
          "description": "Sets an accessible label",
          "type": "string"
        },
        {
          "name": "href",
          "description": "REQUIRED: URL or URL fragment of the link",
          "type": "string"
        },
        {
          "name": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "download",
          "description": "Download a URL instead of navigating to it",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "main",
          "description": "Whether to apply the \"main\" link style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "small",
          "description": "Whether to apply the \"small\" link style",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "ariaLabel",
          "attribute": "aria-label",
          "description": "Sets an accessible label",
          "type": "string"
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "REQUIRED: URL or URL fragment of the link",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "download",
          "attribute": "download",
          "description": "Download a URL instead of navigating to it",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "main",
          "attribute": "main",
          "description": "Whether to apply the \"main\" link style",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "small",
          "attribute": "small",
          "description": "Whether to apply the \"small\" link style",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "The content (e.g., text) that when selected causes navigation"
        }
      ]
    },
    {
      "name": "d2l-list-demo-drag-and-drop-usage",
      "path": "./components/list/demo/list-demo-drag-and-drop-usage.js",
      "attributes": [
        {
          "name": "grid",
          "type": "boolean"
        },
        {
          "name": "hrefs",
          "type": "boolean"
        },
        {
          "name": "selectable",
          "type": "boolean"
        },
        {
          "name": "list",
          "type": "array",
          "default": "[{\"key\":\"1\",\"name\":\"Geomorphology and GIS\",\"secondary\":\"This course explores the geological processes of the Earth's interior and surface. These include volcanism, earthquakes, mountain...\",\"img\":\"https://s.brightspace.com/course-images/images/63b162ab-b582-4bf9-8c1d-1dad04714121/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"2\",\"name\":\"Engineering Materials for Energy Systems\",\"secondary\":\"This course explores the geological processes of the Earth's interior and surface. These include volcanism, earthquakes, mountain...\",\"img\":\"https://s.brightspace.com/course-images/images/e5fd575a-bc14-4a80-89e1-46f349a76178/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"3\",\"name\":\"Introductory Earth Sciences\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/38e839b1-37fa-470c-8830-b189ce4ae134/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"4\",\"name\":\"Applied Complex Analysis\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/c63e7407-c3ba-4fa0-8383-08a8f4fa468b/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"5\",\"name\":\"Basic French\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/9e319eb4-31af-4912-889d-92d9f2d82884/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"6\",\"name\":\"Algebraic Number Theory\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/36c5813d-2ac3-4a73-8f39-3d6e1b381fe3/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"}]"
        }
      ],
      "properties": [
        {
          "name": "grid",
          "attribute": "grid",
          "type": "boolean"
        },
        {
          "name": "hrefs",
          "attribute": "hrefs",
          "type": "boolean"
        },
        {
          "name": "selectable",
          "attribute": "selectable",
          "type": "boolean"
        },
        {
          "name": "list",
          "attribute": "list",
          "type": "array",
          "default": "[{\"key\":\"1\",\"name\":\"Geomorphology and GIS\",\"secondary\":\"This course explores the geological processes of the Earth's interior and surface. These include volcanism, earthquakes, mountain...\",\"img\":\"https://s.brightspace.com/course-images/images/63b162ab-b582-4bf9-8c1d-1dad04714121/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"2\",\"name\":\"Engineering Materials for Energy Systems\",\"secondary\":\"This course explores the geological processes of the Earth's interior and surface. These include volcanism, earthquakes, mountain...\",\"img\":\"https://s.brightspace.com/course-images/images/e5fd575a-bc14-4a80-89e1-46f349a76178/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"3\",\"name\":\"Introductory Earth Sciences\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/38e839b1-37fa-470c-8830-b189ce4ae134/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"4\",\"name\":\"Applied Complex Analysis\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/c63e7407-c3ba-4fa0-8383-08a8f4fa468b/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"5\",\"name\":\"Basic French\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/9e319eb4-31af-4912-889d-92d9f2d82884/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"},{\"key\":\"6\",\"name\":\"Algebraic Number Theory\",\"secondary\":\"This course explores the geological process of the Earth's interior and surface. These include volcanism, earthquakes, mountains...\",\"img\":\"https://s.brightspace.com/course-images/images/36c5813d-2ac3-4a73-8f39-3d6e1b381fe3/tile-high-density-max-size.jpg\",\"href\":\"https://d2l.com\"}]"
        }
      ]
    },
    {
      "name": "d2l-list-item-button",
      "path": "./components/list/list-item-button.js",
      "description": "A component for a \"listitem\" child within a list. It provides semantics, basic layout, breakpoints for responsiveness, a link for navigation, and selection.",
      "attributes": [
        {
          "name": "breakpoints",
          "description": "Breakpoints for responsiveness in pixels. There are four different breakpoints and only the four largest breakpoints will be used.",
          "type": "array",
          "default": "[842,636,580,0]"
        },
        {
          "name": "slim",
          "description": "Whether to render the list-item with reduced whitespace.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "draggable",
          "description": "Whether the item is draggable",
          "type": "boolean"
        },
        {
          "name": "drag-handle-text",
          "type": "string"
        },
        {
          "name": "drop-text",
          "type": "string"
        },
        {
          "name": "dragging",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the checkbox",
          "type": "boolean"
        },
        {
          "name": "key",
          "description": "Value to identify item if selectable",
          "type": "string"
        },
        {
          "name": "selectable",
          "description": "Indicates a checkbox should be rendered for selecting the item",
          "type": "boolean"
        },
        {
          "name": "selected",
          "description": "Whether the item is selected",
          "type": "boolean"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "breakpoints",
          "attribute": "breakpoints",
          "description": "Breakpoints for responsiveness in pixels. There are four different breakpoints and only the four largest breakpoints will be used.",
          "type": "array",
          "default": "[842,636,580,0]"
        },
        {
          "name": "slim",
          "attribute": "slim",
          "description": "Whether to render the list-item with reduced whitespace.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "draggable",
          "attribute": "draggable",
          "description": "Whether the item is draggable",
          "type": "boolean"
        },
        {
          "name": "dragHandleText",
          "attribute": "drag-handle-text",
          "type": "string"
        },
        {
          "name": "dropText",
          "attribute": "drop-text",
          "type": "string"
        },
        {
          "name": "dragging",
          "attribute": "dragging",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the checkbox",
          "type": "boolean"
        },
        {
          "name": "key",
          "attribute": "key",
          "description": "Value to identify item if selectable",
          "type": "string"
        },
        {
          "name": "selectable",
          "attribute": "selectable",
          "description": "Indicates a checkbox should be rendered for selecting the item",
          "type": "boolean"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Whether the item is selected",
          "type": "boolean"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-list-item-button-click",
          "description": "Dispatched when the component item is clicked"
        },
        {
          "name": "d2l-list-item-selected",
          "description": "Dispatched when the component item is selected"
        },
        {
          "name": "d2l-list-item-position-change"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the component"
        },
        {
          "name": "illustration",
          "description": "Image associated with the list item located at the left of the item"
        },
        {
          "name": "actions",
          "description": "Actions (e.g., button icons) associated with the listen item located at the right of the item"
        }
      ]
    },
    {
      "name": "d2l-list-item-content",
      "path": "./components/list/list-item-content.js",
      "description": "A component for consistent layout of primary and secondary text in a list item.",
      "slots": [
        {
          "name": "",
          "description": "Primary text of the list item"
        },
        {
          "name": "secondary",
          "description": "Secondary text of the list item"
        },
        {
          "name": "supporting-info",
          "description": "Information that supports the list item"
        }
      ]
    },
    {
      "name": "d2l-list-item-drag-handle",
      "path": "./components/list/list-item-drag-handle.js",
      "attributes": [
        {
          "name": "keyboard-text-info",
          "type": "object"
        },
        {
          "name": "text",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "keyboardTextInfo",
          "attribute": "keyboard-text-info",
          "type": "object"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-list-item-drag-handle-action"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-list-item-generic-layout",
      "path": "./components/list/list-item-generic-layout.js",
      "description": "A component for generating a list item's layout with forced focus ordering and grid support.\nFocusable items placed in the \"content\" slot will have their focus removed; use the content-action\nslot for such items.",
      "attributes": [
        {
          "name": "grid-active",
          "description": "Specifies whether the grid is active or not",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "gridActive",
          "attribute": "grid-active",
          "description": "Specifies whether the grid is active or not",
          "type": "boolean"
        }
      ],
      "slots": [
        {
          "name": "outside-control",
          "description": "Control associated on the far left, e.g., a drag-n-drop handle"
        },
        {
          "name": "outside-control-action",
          "description": "An action area associated with the outside control"
        },
        {
          "name": "control",
          "description": "Main control beside the outside control, e.g., a checkbox"
        },
        {
          "name": "control-action",
          "description": "Action area associated with the main control"
        },
        {
          "name": "content",
          "description": "Content of the list item, such as that in a list-item-content component."
        },
        {
          "name": "content-action",
          "description": "Action associated with the content, such as a navigation link"
        },
        {
          "name": "actions",
          "description": "Other actions for the list item on the far right, such as a context menu"
        }
      ]
    },
    {
      "name": "d2l-list-item-placement-marker",
      "path": "./components/list/list-item-placement-marker.js"
    },
    {
      "name": "d2l-list-item",
      "path": "./components/list/list-item.js",
      "description": "A component for a \"listitem\" child within a list. It provides semantics, basic layout, breakpoints for responsiveness, a link for navigation, and selection.",
      "attributes": [
        {
          "name": "href",
          "description": "Address of item link if navigable",
          "type": "string"
        },
        {
          "name": "action-href",
          "description": "Address of item link if navigable",
          "type": "string"
        },
        {
          "name": "breakpoints",
          "description": "Breakpoints for responsiveness in pixels. There are four different breakpoints and only the four largest breakpoints will be used.",
          "type": "array",
          "default": "[842,636,580,0]"
        },
        {
          "name": "slim",
          "description": "Whether to render the list-item with reduced whitespace.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "draggable",
          "description": "Whether the item is draggable",
          "type": "boolean"
        },
        {
          "name": "drag-handle-text",
          "type": "string"
        },
        {
          "name": "drop-text",
          "type": "string"
        },
        {
          "name": "dragging",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Disables the checkbox",
          "type": "boolean"
        },
        {
          "name": "key",
          "description": "Value to identify item if selectable",
          "type": "string"
        },
        {
          "name": "selectable",
          "description": "Indicates a checkbox should be rendered for selecting the item",
          "type": "boolean"
        },
        {
          "name": "selected",
          "description": "Whether the item is selected",
          "type": "boolean"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "description": "Address of item link if navigable",
          "type": "string"
        },
        {
          "name": "actionHref",
          "attribute": "action-href",
          "description": "Address of item link if navigable",
          "type": "string"
        },
        {
          "name": "breakpoints",
          "attribute": "breakpoints",
          "description": "Breakpoints for responsiveness in pixels. There are four different breakpoints and only the four largest breakpoints will be used.",
          "type": "array",
          "default": "[842,636,580,0]"
        },
        {
          "name": "slim",
          "attribute": "slim",
          "description": "Whether to render the list-item with reduced whitespace.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "draggable",
          "attribute": "draggable",
          "description": "Whether the item is draggable",
          "type": "boolean"
        },
        {
          "name": "dragHandleText",
          "attribute": "drag-handle-text",
          "type": "string"
        },
        {
          "name": "dropText",
          "attribute": "drop-text",
          "type": "string"
        },
        {
          "name": "dragging",
          "attribute": "dragging",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the checkbox",
          "type": "boolean"
        },
        {
          "name": "key",
          "attribute": "key",
          "description": "Value to identify item if selectable",
          "type": "string"
        },
        {
          "name": "selectable",
          "attribute": "selectable",
          "description": "Indicates a checkbox should be rendered for selecting the item",
          "type": "boolean"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Whether the item is selected",
          "type": "boolean"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-list-item-selected",
          "description": "Dispatched when the component item is selected"
        },
        {
          "name": "d2l-list-item-link-click"
        },
        {
          "name": "d2l-list-item-position-change"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the component"
        },
        {
          "name": "illustration",
          "description": "Image associated with the list item located at the left of the item"
        },
        {
          "name": "actions",
          "description": "Actions (e.g., button icons) associated with the listen item located at the right of the item"
        }
      ]
    },
    {
      "name": "d2l-list",
      "path": "./components/list/list.js",
      "description": "A container for a styled list of items (\"d2l-list-item\"). It provides the appropriate \"list\" semantics as well as options for displaying separators, etc.",
      "attributes": [
        {
          "name": "separators",
          "description": "Display separators. Valid values are \"all\" (default), \"between\", \"none\"",
          "type": "'all'|'between'|'none'",
          "default": "\"\\\"all\\\"\""
        },
        {
          "name": "extend-separators",
          "description": "Whether to extend the separators beyond the content's edge",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "grid",
          "description": "Use grid to manage focus with arrow keys",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "separators",
          "attribute": "separators",
          "description": "Display separators. Valid values are \"all\" (default), \"between\", \"none\"",
          "type": "'all'|'between'|'none'",
          "default": "\"\\\"all\\\"\""
        },
        {
          "name": "extendSeparators",
          "attribute": "extend-separators",
          "description": "Whether to extend the separators beyond the content's edge",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "grid",
          "attribute": "grid",
          "description": "Use grid to manage focus with arrow keys",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-list-selection-change",
          "description": "Dispatched when the selection state changes"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "List content (e.g., \"listitem\"s)"
        }
      ]
    },
    {
      "name": "d2l-loading-spinner-demo-override",
      "path": "./components/loading-spinner/demo/loading-spinner-override.js",
      "attributes": [
        {
          "name": "override-color",
          "type": "boolean"
        },
        {
          "name": "override-size",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "overrideColor",
          "attribute": "override-color",
          "type": "boolean"
        },
        {
          "name": "overrideSize",
          "attribute": "override-size",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "d2l-loading-spinner",
      "path": "./components/loading-spinner/loading-spinner.js",
      "description": "A loading spinner component.",
      "attributes": [
        {
          "name": "color",
          "description": "Color of the animated bar",
          "type": "string",
          "default": "\"\\\"--d2l-color-celestine\\\"\""
        },
        {
          "name": "size",
          "description": "Height and width (px) of the spinner",
          "type": "number",
          "default": "\"50\""
        }
      ],
      "properties": [
        {
          "name": "color",
          "attribute": "color",
          "description": "Color of the animated bar",
          "type": "string",
          "default": "\"\\\"--d2l-color-celestine\\\"\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Height and width (px) of the spinner",
          "type": "number",
          "default": "\"50\""
        }
      ]
    },
    {
      "name": "d2l-custom-menu-item",
      "path": "./components/menu/demo/custom-menu-item.js",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"menuitem\""
        },
        {
          "name": "tabindex",
          "type": "number",
          "default": "-1"
        }
      ],
      "events": [
        {
          "name": "d2l-menu-item-select"
        },
        {
          "name": "d2l-menu-item-visibility-change"
        }
      ]
    },
    {
      "name": "d2l-custom-view",
      "path": "./components/menu/demo/custom-view.js",
      "properties": [
        {
          "name": "hierarchicalView",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "d2l-hierarchical-view-hide-start"
        },
        {
          "name": "d2l-hierarchical-view-show-start"
        },
        {
          "name": "d2l-hierarchical-view-hide-complete"
        },
        {
          "name": "d2l-hierarchical-view-show-complete"
        },
        {
          "name": "d2l-hierarchical-view-resize"
        }
      ]
    },
    {
      "name": "d2l-menu-item-checkbox",
      "path": "./components/menu/menu-item-checkbox.js",
      "description": "A menu item component used for selection. Multiple checkboxes can be selected at once.",
      "attributes": [
        {
          "name": "value",
          "description": "The selectable item's value",
          "type": "string"
        },
        {
          "name": "selected",
          "description": "This will set the item to be selected by default",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "value",
          "attribute": "value",
          "description": "The selectable item's value",
          "type": "string"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "This will set the item to be selected by default",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"menuitemcheckbox\""
        },
        {
          "name": "tabindex",
          "type": "number",
          "default": "-1"
        }
      ],
      "events": [
        {
          "name": "click",
          "description": "Dispatched when the link is clicked"
        },
        {
          "name": "d2l-menu-item-change",
          "description": "Dispatched when the selected menu item changes"
        },
        {
          "name": "d2l-menu-item-select",
          "description": "Dispatched when the menu item is selected"
        },
        {
          "name": "d2l-menu-item-visibility-change",
          "description": "Dispatched when the visibility of the menu item changes"
        }
      ]
    },
    {
      "name": "d2l-menu-item-link",
      "path": "./components/menu/menu-item-link.js",
      "description": "A menu item component used for navigating.",
      "attributes": [
        {
          "name": "download",
          "description": "Prompts the user to save the linked URL instead of navigating to it.\nMust be to a resource on the same origin.\nCan be used with or without a value, when set the value becomes the filename.",
          "type": "string"
        },
        {
          "name": "href",
          "description": "The url the menu item link navigates to",
          "type": "string"
        },
        {
          "name": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "download",
          "attribute": "download",
          "description": "Prompts the user to save the linked URL instead of navigating to it.\nMust be to a resource on the same origin.\nCan be used with or without a value, when set the value becomes the filename.",
          "type": "string"
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "The url the menu item link navigates to",
          "type": "string"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Where to display the linked URL",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"menuitem\""
        },
        {
          "name": "tabindex",
          "type": "number",
          "default": "-1"
        }
      ],
      "events": [
        {
          "name": "click",
          "description": "Dispatched when the link is clicked"
        },
        {
          "name": "d2l-menu-item-select",
          "description": "Dispatched when the menu item is selected"
        },
        {
          "name": "d2l-menu-item-visibility-change",
          "description": "Dispatched when the visibility of the menu item changes"
        }
      ]
    },
    {
      "name": "d2l-menu-item-radio",
      "path": "./components/menu/menu-item-radio.js",
      "description": "A menu item component used for radio selection. Only one radio item in a given d2l-menu may be selected at once (i.e., selecting one option will deselect the other selected \"d2l-menu-item-radio\" item).",
      "attributes": [
        {
          "name": "value",
          "description": "The selectable item's value",
          "type": "string"
        },
        {
          "name": "selected",
          "description": "This will set the item to be selected by default",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "value",
          "attribute": "value",
          "description": "The selectable item's value",
          "type": "string"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "This will set the item to be selected by default",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"menuitemradio\""
        },
        {
          "name": "tabindex",
          "type": "number",
          "default": "-1"
        }
      ],
      "events": [
        {
          "name": "d2l-menu-item-change",
          "description": "Dispatched when the selected menu item changes"
        },
        {
          "name": "d2l-menu-item-select",
          "description": "Dispatched when a menu item is selected"
        },
        {
          "name": "d2l-menu-item-visibility-change",
          "description": "Dispatched when the visibility of the menu item changes"
        }
      ]
    },
    {
      "name": "d2l-menu-item-return",
      "path": "./components/menu/menu-item-return.js",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"menuitem\""
        },
        {
          "name": "tabindex",
          "type": "number",
          "default": "-1"
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        },
        {
          "name": "d2l-menu-item-select"
        },
        {
          "name": "d2l-menu-item-visibility-change"
        }
      ]
    },
    {
      "name": "d2l-menu-item-separator",
      "path": "./components/menu/menu-item-separator.js",
      "description": "A component for displaying a more distinct separator between menu items."
    },
    {
      "name": "d2l-menu-item",
      "path": "./components/menu/menu-item.js",
      "description": "A menu item component used with JS handlers.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: Text displayed by the menu item",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disables the menu item",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"menuitem\""
        },
        {
          "name": "tabindex",
          "type": "number",
          "default": "-1"
        }
      ],
      "events": [
        {
          "name": "d2l-menu-item-select",
          "description": "Dispatched when a menu item is selected"
        },
        {
          "name": "d2l-menu-item-visibility-change",
          "description": "Dispatched when the visibility of the menu item changes"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the component"
        }
      ]
    },
    {
      "name": "d2l-menu",
      "path": "./components/menu/menu.js",
      "description": "A wrapper component for a menu containing menu items.",
      "attributes": [
        {
          "name": "label",
          "description": "Text to be applied to menu \"aria-label\" for use with screen readers (REQUIRED for root menu)",
          "type": "string"
        },
        {
          "name": "theme",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "Text to be applied to menu \"aria-label\" for use with screen readers (REQUIRED for root menu)",
          "type": "string"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"menu\""
        },
        {
          "name": "theme",
          "attribute": "theme",
          "type": "string"
        },
        {
          "name": "hierarchicalView",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "d2l-menu-resize",
          "description": "Dispatched when size of menu changes (e.g., when nested menu of a different size is opened)"
        },
        {
          "name": "d2l-hierarchical-view-hide-start"
        },
        {
          "name": "d2l-hierarchical-view-show-start"
        },
        {
          "name": "d2l-hierarchical-view-hide-complete"
        },
        {
          "name": "d2l-hierarchical-view-show-complete"
        },
        {
          "name": "d2l-hierarchical-view-resize"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Menu items"
        }
      ]
    },
    {
      "name": "d2l-custom-slots",
      "path": "./components/menu/test/custom-slots.js"
    },
    {
      "name": "d2l-custom-view",
      "path": "./components/menu/test/custom-view.js",
      "properties": [
        {
          "name": "hierarchicalView",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "d2l-hierarchical-view-hide-start"
        },
        {
          "name": "d2l-hierarchical-view-show-start"
        },
        {
          "name": "d2l-hierarchical-view-hide-complete"
        },
        {
          "name": "d2l-hierarchical-view-show-complete"
        },
        {
          "name": "d2l-hierarchical-view-resize"
        }
      ]
    },
    {
      "name": "d2l-meter-circle",
      "path": "./components/meter/meter-circle.js",
      "description": "A circular progress indicator.",
      "attributes": [
        {
          "name": "text",
          "description": "Context information for the meter",
          "type": "string"
        },
        {
          "name": "max",
          "description": "Max number of units that are being measured by this meter.\nValid values: A number > 0",
          "type": "number",
          "default": "100"
        },
        {
          "name": "percent",
          "description": "Shows a percentage instead of \"value/max\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "REQUIRED: Current number of completed units.\nValid values: A number between 0 and max",
          "type": "number",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "Context information for the meter",
          "type": "string"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Max number of units that are being measured by this meter.\nValid values: A number > 0",
          "type": "number",
          "default": "100"
        },
        {
          "name": "percent",
          "attribute": "percent",
          "description": "Shows a percentage instead of \"value/max\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "REQUIRED: Current number of completed units.\nValid values: A number between 0 and max",
          "type": "number",
          "default": "0"
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-meter-linear",
      "path": "./components/meter/meter-linear.js",
      "description": "A horizontal progress bar.",
      "attributes": [
        {
          "name": "text-inline",
          "description": "Keeps the meter to a single line",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "description": "Context information for the meter",
          "type": "string"
        },
        {
          "name": "max",
          "description": "Max number of units that are being measured by this meter.\nValid values: A number > 0",
          "type": "number",
          "default": "100"
        },
        {
          "name": "percent",
          "description": "Shows a percentage instead of \"value/max\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "REQUIRED: Current number of completed units.\nValid values: A number between 0 and max",
          "type": "number",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "textInline",
          "attribute": "text-inline",
          "description": "Keeps the meter to a single line",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "Context information for the meter",
          "type": "string"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Max number of units that are being measured by this meter.\nValid values: A number > 0",
          "type": "number",
          "default": "100"
        },
        {
          "name": "percent",
          "attribute": "percent",
          "description": "Shows a percentage instead of \"value/max\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "REQUIRED: Current number of completed units.\nValid values: A number between 0 and max",
          "type": "number",
          "default": "0"
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-meter-radial",
      "path": "./components/meter/meter-radial.js",
      "description": "A half-circle progress indicator.",
      "attributes": [
        {
          "name": "text",
          "description": "Context information for the meter",
          "type": "string"
        },
        {
          "name": "max",
          "description": "Max number of units that are being measured by this meter.\nValid values: A number > 0",
          "type": "number",
          "default": "100"
        },
        {
          "name": "percent",
          "description": "Shows a percentage instead of \"value/max\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "description": "REQUIRED: Current number of completed units.\nValid values: A number between 0 and max",
          "type": "number",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "Context information for the meter",
          "type": "string"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Max number of units that are being measured by this meter.\nValid values: A number > 0",
          "type": "number",
          "default": "100"
        },
        {
          "name": "percent",
          "attribute": "percent",
          "description": "Shows a percentage instead of \"value/max\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "REQUIRED: Current number of completed units.\nValid values: A number between 0 and max",
          "type": "number",
          "default": "0"
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ]
    },
    {
      "name": "d2l-more-less",
      "path": "./components/more-less/more-less.js",
      "description": "A component used to minimize the display of long content, while providing a way to reveal the full content.",
      "attributes": [
        {
          "name": "blur-color",
          "description": "The gradient color of the blurring effect",
          "type": "string"
        },
        {
          "name": "h-align",
          "description": "The h-align property of the more-less button",
          "type": "'text'|''"
        },
        {
          "name": "expanded",
          "description": "Indicates whether element is in \"more\" state",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "height",
          "description": "The maximum height of the content when in \"less\" state",
          "type": "string",
          "default": "\"4em\""
        },
        {
          "name": "inactive",
          "description": "Whether the component is active or inactive",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "blurColor",
          "attribute": "blur-color",
          "description": "The gradient color of the blurring effect",
          "type": "string"
        },
        {
          "name": "hAlign",
          "attribute": "h-align",
          "description": "The h-align property of the more-less button",
          "type": "'text'|''"
        },
        {
          "name": "expanded",
          "attribute": "expanded",
          "description": "Indicates whether element is in \"more\" state",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "height",
          "attribute": "height",
          "description": "The maximum height of the content when in \"less\" state",
          "type": "string",
          "default": "\"4em\""
        },
        {
          "name": "inactive",
          "attribute": "inactive",
          "description": "Whether the component is active or inactive",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-more-less-render",
          "description": "Dispatched when the component finishes rendering"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the component"
        }
      ]
    },
    {
      "name": "d2l-offscreen-demo",
      "path": "./components/offscreen/demo/offscreen-demo.js"
    },
    {
      "name": "d2l-offscreen",
      "path": "./components/offscreen/offscreen.js",
      "description": "A component for positioning content offscreen to only be visible to screen readers.",
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the component"
        }
      ]
    },
    {
      "name": "d2l-overflow-group",
      "path": "./components/overflow-group/overflow-group.js",
      "description": "A component that can be used to display a set of buttons, links or menus that will be put into a\ndropdown menu when they no longer fit on the first line of their container",
      "attributes": [
        {
          "name": "auto-show",
          "description": "Use predefined classes on slot elements to set min and max buttons to show",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "max-to-show",
          "description": "maximum amount of buttons to show",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "min-to-show",
          "description": "minimum amount of buttons to show",
          "type": "number",
          "default": "1"
        },
        {
          "name": "opener-style",
          "description": "Setting this property will change the style of the overflow menu opener",
          "type": "'default'|'subtle'",
          "default": "\"\\\"default\\\"\""
        },
        {
          "name": "opener-type",
          "description": "Set the opener type to 'icon' for a `...` menu icon instead of `More actions` text",
          "type": "'default'|'icon'",
          "default": "\"\\\"default\\\"\""
        }
      ],
      "properties": [
        {
          "name": "autoShow",
          "attribute": "auto-show",
          "description": "Use predefined classes on slot elements to set min and max buttons to show",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "maxToShow",
          "attribute": "max-to-show",
          "description": "maximum amount of buttons to show",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "minToShow",
          "attribute": "min-to-show",
          "description": "minimum amount of buttons to show",
          "type": "number",
          "default": "1"
        },
        {
          "name": "openerStyle",
          "attribute": "opener-style",
          "description": "Setting this property will change the style of the overflow menu opener",
          "type": "'default'|'subtle'",
          "default": "\"\\\"default\\\"\""
        },
        {
          "name": "openerType",
          "attribute": "opener-type",
          "description": "Set the opener type to 'icon' for a `...` menu icon instead of `More actions` text",
          "type": "'default'|'icon'",
          "default": "\"\\\"default\\\"\""
        }
      ],
      "events": [
        {
          "name": "d2l-overflow-group-updated"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Buttons, dropdown buttons, links or other items to be added to the container"
        }
      ]
    },
    {
      "name": "d2l-test-skeleton-box",
      "path": "./components/skeleton/demo/skeleton-test-box.js",
      "attributes": [
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-test-skeleton-container",
      "path": "./components/skeleton/demo/skeleton-test-container.js",
      "attributes": [
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-test-skeleton-heading",
      "path": "./components/skeleton/demo/skeleton-test-heading.js",
      "attributes": [
        {
          "name": "level",
          "type": "number"
        },
        {
          "name": "width",
          "type": "number"
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "level",
          "attribute": "level",
          "type": "number"
        },
        {
          "name": "width",
          "attribute": "width",
          "type": "number"
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-test-skeleton-link",
      "path": "./components/skeleton/demo/skeleton-test-link.js",
      "attributes": [
        {
          "name": "width",
          "type": "number"
        },
        {
          "name": "type",
          "type": "string",
          "default": "\"normal\""
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "width",
          "attribute": "width",
          "type": "number"
        },
        {
          "name": "type",
          "attribute": "type",
          "type": "string",
          "default": "\"normal\""
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-test-skeleton-paragraph",
      "path": "./components/skeleton/demo/skeleton-test-paragraph.js",
      "attributes": [
        {
          "name": "lines",
          "type": "number"
        },
        {
          "name": "type",
          "type": "string",
          "default": "\"standard\""
        },
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "lines",
          "attribute": "lines",
          "type": "number"
        },
        {
          "name": "type",
          "attribute": "type",
          "type": "string",
          "default": "\"standard\""
        },
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-test-skeleton-width",
      "path": "./components/skeleton/demo/skeleton-test-width.js",
      "attributes": [
        {
          "name": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "skeleton",
          "attribute": "skeleton",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-status-indicator",
      "path": "./components/status-indicator/status-indicator.js",
      "description": "A component for communicating the status of an item. It is non-interactive and used to assert prominence on state.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: The text that is displayed within the status indicator",
          "type": "string"
        },
        {
          "name": "state",
          "description": "State of status indicator to display",
          "type": "'default'|'success'|'alert'|'none'",
          "default": "\"default\""
        },
        {
          "name": "bold",
          "description": "Use when the status is very important and needs to have a lot of prominence",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: The text that is displayed within the status indicator",
          "type": "string"
        },
        {
          "name": "state",
          "attribute": "state",
          "description": "State of status indicator to display",
          "type": "'default'|'success'|'alert'|'none'",
          "default": "\"default\""
        },
        {
          "name": "bold",
          "attribute": "bold",
          "description": "Use when the status is very important and needs to have a lot of prominence",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "d2l-switch-visibility",
      "path": "./components/switch/switch-visibility.js",
      "attributes": [
        {
          "name": "text"
        },
        {
          "name": "tooltip",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "on",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text-position",
          "type": "string",
          "default": "\"end\""
        }
      ],
      "properties": [
        {
          "name": "offIcon",
          "type": "TemplateResult"
        },
        {
          "name": "onIcon",
          "type": "TemplateResult"
        },
        {
          "name": "text",
          "attribute": "text"
        },
        {
          "name": "tooltip",
          "attribute": "tooltip",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "on",
          "attribute": "on",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "textPosition",
          "attribute": "text-position",
          "type": "string",
          "default": "\"end\""
        }
      ],
      "events": [
        {
          "name": "d2l-localize-behavior-language-changed"
        },
        {
          "name": "change"
        }
      ]
    },
    {
      "name": "d2l-switch",
      "path": "./components/switch/switch.js",
      "attributes": [
        {
          "name": "text",
          "type": "string"
        },
        {
          "name": "tooltip",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "on",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text-position",
          "type": "string",
          "default": "\"end\""
        }
      ],
      "properties": [
        {
          "name": "offIcon",
          "type": "TemplateResult"
        },
        {
          "name": "onIcon",
          "type": "TemplateResult"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string"
        },
        {
          "name": "tooltip",
          "attribute": "tooltip",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "labelHidden",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "on",
          "attribute": "on",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "textPosition",
          "attribute": "text-position",
          "type": "string",
          "default": "\"end\""
        }
      ],
      "events": [
        {
          "name": "change"
        }
      ]
    },
    {
      "name": "d2l-tab-internal",
      "path": "./components/tabs/tab-internal.js",
      "attributes": [
        {
          "name": "controls-panel",
          "type": "string"
        },
        {
          "name": "text",
          "type": "string"
        },
        {
          "name": "aria-selected",
          "type": "string",
          "default": "\"false\""
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"tab\""
        }
      ],
      "properties": [
        {
          "name": "controlsPanel",
          "attribute": "controls-panel",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string"
        },
        {
          "name": "ariaSelected",
          "attribute": "aria-selected",
          "type": "string",
          "default": "\"false\""
        },
        {
          "name": "role",
          "attribute": "role",
          "type": "string",
          "default": "\"tab\""
        },
        {
          "name": "tabIndex",
          "type": "number",
          "default": "-1"
        }
      ],
      "events": [
        {
          "name": "d2l-tab-selected"
        }
      ]
    },
    {
      "name": "d2l-tab-panel",
      "path": "./components/tabs/tab-panel.js",
      "description": "A component for tab panel content.",
      "attributes": [
        {
          "name": "text",
          "description": "REQUIRED: The text used for the tab, as well as labelling the panel",
          "type": "string"
        },
        {
          "name": "no-padding",
          "description": "Opt out of default padding/whitespace around the panel",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "description": "Use to select the tab",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "text",
          "attribute": "text",
          "description": "REQUIRED: The text used for the tab, as well as labelling the panel",
          "type": "string"
        },
        {
          "name": "noPadding",
          "attribute": "no-padding",
          "description": "Opt out of default padding/whitespace around the panel",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "role",
          "type": "string",
          "default": "\"tabpanel\""
        },
        {
          "name": "selected",
          "attribute": "selected",
          "description": "Use to select the tab",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-tab-panel-text-changed",
          "description": "Dispatched when the text attribute is changed"
        },
        {
          "name": "d2l-tab-panel-selected",
          "description": "Dispatched when a tab is selected"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content in tab panel"
        }
      ]
    },
    {
      "name": "d2l-tabs",
      "path": "./components/tabs/tabs.js",
      "description": "A component for tabbed content. It supports the \"d2l-tab-panel\" component for the content, renders tabs responsively, and provides virtual scrolling for large tab lists.",
      "attributes": [
        {
          "name": "max-to-show",
          "description": "Limit the number of tabs to initially display",
          "type": "number",
          "default": "-1"
        }
      ],
      "properties": [
        {
          "name": "maxToShow",
          "attribute": "max-to-show",
          "description": "Limit the number of tabs to initially display",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "arrowKeysDirection",
          "type": "string",
          "default": "\"leftright\""
        },
        {
          "name": "arrowKeysNoWrap",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "d2l-tabs-initialized",
          "description": "Dispatched when the component is initialized"
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Contains the tab panels (e.g., \"d2l-tab-panel\" components)"
        },
        {
          "name": "ext",
          "description": "Additional content (e.g., a button) positioned at right"
        }
      ]
    },
    {
      "name": "d2l-tooltip",
      "path": "./components/tooltip/tooltip.js",
      "description": "A component used to display additional information when users focus or hover on a point of interest.",
      "attributes": [
        {
          "name": "align",
          "description": "Align the tooltip with either the start or end of its target. If not set, the tooltip will attempt be centered.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "description": "Provide boundaries to constrain where the tooltip will appear. The boundary is relative to the tooltip's offset parent. Valid properties include a combination of \"top\", \"bottom\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "for",
          "description": "REQUIRED: The \"id\" of the tooltip's target element. Both elements must be within the same shadow root. If not provided, the tooltip's parent element will be used as its target.",
          "type": "string"
        },
        {
          "name": "position",
          "description": "Force the tooltip to open in a certain direction. If no position is provided, the tooltip will open in the first position that has enough space for it in the order: bottom, top, right, left.",
          "type": "'top'|'bottom'|'left'|'right'"
        },
        {
          "name": "announced",
          "description": "Announce the tooltip innerText when applicable (for use with custom elements)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "close-on-click",
          "description": "Causes the tooltip to close when its target is clicked",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "delay",
          "description": "Provide a delay in milliseconds to prevent the tooltip from opening immediately when hovered. This delay will only apply to hover, not focus.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "disable-focus-lock",
          "description": "Disables focus lock so the tooltip will automatically close when no longer hovered even if it still has focus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "force-show",
          "description": "Force the tooltip to stay open as long as it remains \"true\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "for-type",
          "description": "Accessibility type for the tooltip to specify whether it is the primary label for the target or a secondary descriptor.",
          "type": "'label'|'descriptor'",
          "default": "\"descriptor\""
        },
        {
          "name": "offset",
          "description": "Adjust the size of the gap between the tooltip and its target",
          "type": "number"
        },
        {
          "name": "state",
          "description": "The style of the tooltip based on the type of information it displays",
          "type": "'info'|'error'",
          "default": "\"info\""
        }
      ],
      "properties": [
        {
          "name": "align",
          "attribute": "align",
          "description": "Align the tooltip with either the start or end of its target. If not set, the tooltip will attempt be centered.",
          "type": "'start'|'end'"
        },
        {
          "name": "boundary",
          "attribute": "boundary",
          "description": "Provide boundaries to constrain where the tooltip will appear. The boundary is relative to the tooltip's offset parent. Valid properties include a combination of \"top\", \"bottom\", \"left\", and \"right\".",
          "type": "object"
        },
        {
          "name": "for",
          "attribute": "for",
          "description": "REQUIRED: The \"id\" of the tooltip's target element. Both elements must be within the same shadow root. If not provided, the tooltip's parent element will be used as its target.",
          "type": "string"
        },
        {
          "name": "position",
          "attribute": "position",
          "description": "Force the tooltip to open in a certain direction. If no position is provided, the tooltip will open in the first position that has enough space for it in the order: bottom, top, right, left.",
          "type": "'top'|'bottom'|'left'|'right'"
        },
        {
          "name": "showing"
        },
        {
          "name": "announced",
          "attribute": "announced",
          "description": "Announce the tooltip innerText when applicable (for use with custom elements)",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "closeOnClick",
          "attribute": "close-on-click",
          "description": "Causes the tooltip to close when its target is clicked",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "delay",
          "attribute": "delay",
          "description": "Provide a delay in milliseconds to prevent the tooltip from opening immediately when hovered. This delay will only apply to hover, not focus.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "disableFocusLock",
          "attribute": "disable-focus-lock",
          "description": "Disables focus lock so the tooltip will automatically close when no longer hovered even if it still has focus",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "forceShow",
          "attribute": "force-show",
          "description": "Force the tooltip to stay open as long as it remains \"true\"",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "forType",
          "attribute": "for-type",
          "description": "Accessibility type for the tooltip to specify whether it is the primary label for the target or a secondary descriptor.",
          "type": "'label'|'descriptor'",
          "default": "\"descriptor\""
        },
        {
          "name": "offset",
          "attribute": "offset",
          "description": "Adjust the size of the gap between the tooltip and its target",
          "type": "number"
        },
        {
          "name": "state",
          "attribute": "state",
          "description": "The style of the tooltip based on the type of information it displays",
          "type": "'info'|'error'",
          "default": "\"info\""
        }
      ],
      "events": [
        {
          "name": "d2l-tooltip-show",
          "description": "Dispatched when the tooltip is opened"
        },
        {
          "name": "d2l-tooltip-hide",
          "description": "Dispatched when the tooltip is closed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default content placed inside of the tooltip"
        }
      ]
    },
    {
      "name": "d2l-validation-custom",
      "path": "./components/validation/validation-custom.js",
      "attributes": [
        {
          "name": "failure-text",
          "type": "string"
        },
        {
          "name": "for",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "failureText",
          "attribute": "failure-text",
          "type": "string"
        },
        {
          "name": "for",
          "attribute": "for",
          "type": "string"
        },
        {
          "name": "forElement"
        }
      ],
      "events": [
        {
          "name": "d2l-validation-custom-validate"
        },
        {
          "name": "d2l-validation-custom-connected"
        },
        {
          "name": "d2l-validation-custom-disconnected"
        }
      ]
    },
    {
      "name": "d2l-template-primary-secondary",
      "path": "./templates/primary-secondary/primary-secondary.js",
      "description": "A two panel (primary and secondary) page template with header and optional footer",
      "attributes": [
        {
          "name": "primary-overflow",
          "description": "Controls how the primary panel's contents overflow",
          "type": "'default'|'hidden'"
        },
        {
          "name": "storage-key",
          "description": "The key used to persist the divider's position to local storage. This key\nshould not be shared between pages so that users can save different divider\npositions on different pages. If no key is provided, the template will fall\nback its default size.",
          "type": "string"
        },
        {
          "name": "background-shading",
          "description": "Controls whether the primary and secondary panels have shaded backgrounds",
          "type": "'primary'|'secondary'|'none'",
          "default": "\"none\""
        },
        {
          "name": "resizable",
          "description": "Whether the panels are user resizable. This only applies to desktop users,\nmobile users will always be able to resize.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "width-type",
          "description": "Whether content fills the screen or not",
          "type": "'fullscreen'|'normal'",
          "default": "\"fullscreen\""
        }
      ],
      "properties": [
        {
          "name": "primaryOverflow",
          "attribute": "primary-overflow",
          "description": "Controls how the primary panel's contents overflow",
          "type": "'default'|'hidden'"
        },
        {
          "name": "storageKey",
          "attribute": "storage-key",
          "description": "The key used to persist the divider's position to local storage. This key\nshould not be shared between pages so that users can save different divider\npositions on different pages. If no key is provided, the template will fall\nback its default size.",
          "type": "string"
        },
        {
          "name": "backgroundShading",
          "attribute": "background-shading",
          "description": "Controls whether the primary and secondary panels have shaded backgrounds",
          "type": "'primary'|'secondary'|'none'",
          "default": "\"none\""
        },
        {
          "name": "resizable",
          "attribute": "resizable",
          "description": "Whether the panels are user resizable. This only applies to desktop users,\nmobile users will always be able to resize.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "widthType",
          "attribute": "width-type",
          "description": "Whether content fills the screen or not",
          "type": "'fullscreen'|'normal'",
          "default": "\"fullscreen\""
        }
      ],
      "events": [
        {
          "name": "d2l-template-primary-secondary-resize-start",
          "description": "Dispatched when a user begins moving the divider."
        },
        {
          "name": "d2l-template-primary-secondary-resize-end",
          "description": "Dispatched when a user finishes moving the divider."
        },
        {
          "name": "d2l-localize-behavior-language-changed"
        }
      ],
      "slots": [
        {
          "name": "header",
          "description": "Page header content"
        },
        {
          "name": "footer",
          "description": "Page footer content"
        },
        {
          "name": "primary",
          "description": "Main page content"
        },
        {
          "name": "secondary",
          "description": "Supplementary page content"
        }
      ]
    }
  ]
}