name: CI
on: pull_request
jobs:
  lint:
    name: Lint
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: Brightspace/third-party-actions@actions/checkout
      - uses: Brightspace/third-party-actions@actions/setup-node
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Lint (JavaScript)
        run: npm run lint:eslint
      - name: Lint (CSS)
        run: npm run lint:style
  playwright:
    name: Accessibility and Unit Tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: Brightspace/third-party-actions@actions/checkout
      - uses: Brightspace/third-party-actions@actions/setup-node
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Validate Translations
        run: npm run test:translations
      - name: Validate custom-elements.json
        run: npm run test:wca
      - name: Accessibility Tests
        id: at
        run: npm run test:axe
      - name: Upload test report
        if: >
          always() &&
          github.triggering_actor != 'dependabot[bot]' &&
          (steps.at.outcome == 'failure' || steps.at.outcome == 'success')
        uses: Brightspace/test-reporting-action@main
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
      - name: Unit Tests
        id: ut
        run: npm run test:unit
      - name: Upload test report
        if: >
          always() &&
          github.triggering_actor != 'dependabot[bot]' &&
          (steps.ut.outcome == 'failure' || steps.ut.outcome == 'success')
        uses: Brightspace/test-reporting-action@main
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
  publish:
    name: Publish static site
    if: ${{ github.triggering_actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: Brightspace/third-party-actions@actions/checkout
      - uses: Brightspace/third-party-actions@actions/setup-node
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

      - name: Build static
        run: npm run build-static

      - name: Assume role
        uses: Brightspace/third-party-actions@aws-actions/configure-aws-credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::022062736489:role/r+BrightspaceUI+core+repo
          role-duration-seconds: 3600
          aws-region: ca-central-1

      - name: Publish
        uses: BrightspaceUI/actions/publish-to-s3@main
        with:
          bucket-path: s3://d2l.dev/live/prs/${{ github.repository }}/pr-${{ github.event.number }}
          publish-directory: ./build/

      - name: Notify
        uses: BrightspaceUI/actions/comment-on-pr@main
        with:
          message: |
            Thanks for the PR! ðŸŽ‰

            We've deployed an automatic preview for this PR - you can see your changes here:

            | URL | https://live.d2l.dev/prs/${{ github.repository }}/pr-${{ github.event.number }}/ |
            |---|---|

            > [!NOTE]
            > The build needs to finish before your changes are deployed.
            > Changes to the PR will automatically update the instance.
          post-mode: once
  update_mapping:
    name: Update Mapping
    runs-on: [self-hosted, Linux, AWS]
    timeout-minutes: 10
    steps:
      - uses: Brightspace/third-party-actions@actions/checkout
        with:
          ref: ${{ github.head_ref || github.ref }}
      - name: update mapping
        working-directory: ${{ inputs.base_path }}
        id: update_mapping
        env:
          GIT_AUTHOR_NAME: Lit HTML Tag Mapping Bot
          GIT_AUTHOR_EMAIL: lit-mapping-bot@github.d2l
          GIT_COMMITTER_NAME: Lit HTML Tag Mapping Bot
          GIT_COMMITTER_EMAIL: lit-mapping-bot@github.d2l
        shell: bash
        run: |
          npm run generate-lit-mappings
          if [ "$( git status -s )" == "" ]; then
            exit 0
          fi
          git add *
          git commit -m 'auto generate lit mappings'
          RANDOM_STR=$( head /dev/urandom | tr -dc a-z0-9 | head -c 4 )
          git push origin "HEAD:refs/heads/auto-lit-mapping-$RANDOM_STR"
          echo "mapping_branch=auto-lit-mapping-$RANDOM_STR" >> $GITHUB_OUTPUT
          exit 1

      - name: create lit mapping PR
        if: failure() && steps.update_mapping.outputs.mapping_branch
        uses: Brightspace/third-party-actions@actions/github-script
        env:
          BRANCH_NAME: ${{ steps.update_mapping.outputs.mapping_branch }}
        with:
          script: |
            const { BRANCH_NAME } = process.env
            const { data: newPr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Auto lit mapping #${context.payload.number}`,
              body: `Auto lit mapping #${context.payload.number}`,
              head: BRANCH_NAME,
              base: context.payload.pull_request.head.ref,
              draft: true
            });
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `PR #${newPr.number} created to update mapping.d.ts.`
            })
